{"ast":null,"code":"import _objectSpread from \"C:/Stuff/Github/peasea/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\components\\\\Fumen\\\\FumenImage\\\\FumenImage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from \"react\";\nimport { decoder } from \"tetris-fumen\";\nimport skin from \"./owoskin.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imageTileSize = 96;\nconst pieceColors = {\n  I: {\n    normal: \"#42afe1\",\n    highlight: \"#6ceaff\",\n    skim: \"#5cc7f9\"\n  },\n  T: {\n    normal: \"#9739a2\",\n    highlight: \"#d958e9\",\n    skim: \"#b94bc6\"\n  },\n  S: {\n    normal: \"#51b84d\",\n    highlight: \"#84f880\",\n    skim: \"#70d36d\"\n  },\n  Z: {\n    normal: \"#eb4f65\",\n    highlight: \"#ff7f79\",\n    skim: \"#f96c67\"\n  },\n  L: {\n    normal: \"#f38927\",\n    highlight: \"#ffba59\",\n    skim: \"#f99e4c\"\n  },\n  J: {\n    normal: \"#1165b5\",\n    highlight: \"#339bff\",\n    skim: \"#2c84da\"\n  },\n  O: {\n    normal: \"#f6d03c\",\n    highlight: \"#ffff7f\",\n    skim: \"#f9df6c\"\n  },\n  X: {\n    normal: \"#868686\",\n    highlight: \"#dddddd\",\n    skim: \"#bdbdbd\"\n  }\n};\nconst skinOffsets = {\n  Z: {\n    x: 0,\n    y: 0\n  },\n  L: {\n    x: 4 * imageTileSize,\n    y: 0\n  },\n  O: {\n    x: 8 * imageTileSize,\n    y: 0\n  },\n  S: {\n    x: 12 * imageTileSize,\n    y: 0\n  },\n  I: {\n    x: 0,\n    y: 6 * imageTileSize\n  },\n  J: {\n    x: 4 * imageTileSize,\n    y: 6 * imageTileSize\n  },\n  T: {\n    x: 8 * imageTileSize,\n    y: 6 * imageTileSize\n  }\n};\nconst skinType = {\n  0b0001: 0,\n  0b0011: 1,\n  //1 16,\n  0b0111: 2,\n  //2 22,\n  0b0101: 3,\n  //3 17,\n  0b1001: 4,\n  0b1011: 5,\n  //5 19,\n  0b1111: 6,\n  0b1101: 7,\n  //7 23,\n  0b1000: 8,\n  0b1010: 9,\n  //9 20,\n  0b1110: 10,\n  //10 18,\n  0b1100: 11,\n  //11 21,\n  0b0000: 12,\n  0b0010: 13,\n  0b0110: 14,\n  0b0100: 15\n};\nconst skinImage = new Image();\nskinImage.src = skin;\nexport const FumenImage = props => {\n  _s();\n  const fumen = props.fumen;\n  const pages = decoder.decode(fumen);\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas == null) return;\n    console.log(\"Rendering \" + fumen);\n    renderImage(canvas, pages);\n  }, [props.fumen]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", _objectSpread(_objectSpread({\n    ref: canvasRef\n  }, props), {}, {\n    width: \"500\",\n    height: \"200\"\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(FumenImage, \"94aMAJjsnKKWv1szh5XpQSMJAvw=\");\n_c = FumenImage;\nconst getHeight = field => {\n  let numRows = 0; // counter for rows with at least 1 filled cell\n  for (let row = 0; row < 23; row++) {\n    for (let col = 0; col < 10; col++) {\n      // assuming 10 columns typical for a Tetris field\n      if (field.at(col, row) !== \"_\") {\n        // if the cell is filled\n        numRows++; // increment the counter\n        break; // no need to check more columns in this row\n      }\n    }\n  }\n  return numRows;\n};\nconst getSkinType = (field, i, j) => {\n  const piece = field.at(i, j);\n  const skinOffset = skinOffsets[piece];\n  if (skinOffset == null) return {\n    x: 1024,\n    y: 192\n  };\n  const {\n    x: skinOffsetX,\n    y: skinOffsetY\n  } = skinOffset;\n  const type = (j <= 23 && field.at(i, j + 1) == piece ? 8 : 0) + (i > 0 && field.at(i - 1, j) == piece ? 4 : 0) + (i <= 9 && field.at(i + 1, j) == piece ? 2 : 0) + (j > 0 && field.at(i, j - 1) == piece ? 1 : 0);\n\n  //console.log(piece, type, j>0 && field.at(i,j-1) == piece ? 1 : 0);\n\n  let skin = skinType[type];\n  if (skin == 1 && field.at(i + 1, j - 1) != piece) {\n    skin = 16;\n  } else if (skin == 2 && field.at(i + 1, j - 1) != piece) {\n    skin = 22;\n  } else if (skin == 3 && field.at(i - 1, j - 1) != piece) {\n    skin = 17;\n  } else if (skin == 5 && field.at(i + 1, j - 1) != piece) {\n    skin = 19;\n  } else if (skin == 7 && field.at(i - 1, j - 1) != piece) {\n    skin = 23;\n  } else if (skin == 9 && field.at(i + 1, j + 1) != piece) {\n    skin = 20;\n  } else if (skin == 10 && field.at(i + 1, j + 1) != piece) {\n    skin = 18;\n  } else if (skin == 11 && field.at(i - 1, j + 1) != piece) {\n    skin = 21;\n  }\n  return {\n    x: skinOffsetX + skin % 4 * imageTileSize,\n    y: skinOffsetY + ~~(skin / 4) * imageTileSize\n  };\n};\nconst renderImage = (canvas, pages) => {\n  if (canvas == null) throw new Error(\"canvas is undefined\");\n  const context = canvas.getContext(\"2d\");\n  if (context == null) throw new Error(\"context is undefined\");\n  const page = pages[0];\n\n  //BACKGROUND COLOR\n  context.fillStyle = \"#FFFFFF\";\n\n  //context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n\n  let tileSize = context.canvas.width / 10;\n  const field = page.field;\n  const rows = getHeight(field);\n  //console.log(`Rows:  ${rows}`);\n\n  for (let j = 0; j < rows; j++) {\n    let skim = true;\n    for (let i = 0; i < 10; i++) {\n      if (field.at(i, j) != \"_\") {\n        var _pieceColors$field$at;\n        //console.log(field.at(i,j));\n        context.fillStyle = pieceColors[field.at(i, j)].normal;\n\n        //FUMEN-UTIL\n        context.fillRect(i * tileSize + 1, context.canvas.height - (j + 1) * tileSize + 1, tileSize - 2, tileSize - 2);\n\n        //FOUR.LOL\n        context.fillRect(i * tileSize, context.canvas.height - (j + 1) * tileSize, tileSize, tileSize);\n        context.fillStyle = (_pieceColors$field$at = pieceColors[field.at(i, j)].highlight) !== null && _pieceColors$field$at !== void 0 ? _pieceColors$field$at : context.fillStyle;\n\n        //CONNECTED SKIN\n\n        /*const { x, y } = getSkinType(field, i, j);\r\n        if (skinImage.complete) {\r\n            context.drawImage(\r\n                skinImage,\r\n                x,\r\n                y,\r\n                imageTileSize,\r\n                imageTileSize,\r\n                i * tileSize,\r\n                context.canvas.height - (j + 1) * tileSize,\r\n                tileSize,\r\n                tileSize\r\n            );\r\n        } else {\r\n            skinImage.onload = function () {\r\n                context.drawImage(\r\n                    skinImage,\r\n                    x,\r\n                    y,\r\n                    imageTileSize,\r\n                    imageTileSize,\r\n                    i * tileSize,\r\n                    context.canvas.height - (j + 1) * tileSize,\r\n                    tileSize,\r\n                    tileSize\r\n                );\r\n            };\r\n        }\r\n        */\n      } else {\n        skim = false;\n      }\n    }\n    if (skim) {\n      context.fillStyle = \"rgba(255,255,255,0.1)\";\n      context.fillRect(0, context.canvas.height - (j + 1) * tileSize, 10 * tileSize, tileSize);\n    }\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"FumenImage\");","map":{"version":3,"names":["useEffect","useRef","decoder","skin","jsxDEV","_jsxDEV","imageTileSize","pieceColors","I","normal","highlight","skim","T","S","Z","L","J","O","X","skinOffsets","x","y","skinType","skinImage","Image","src","FumenImage","props","_s","fumen","pages","decode","canvasRef","canvas","current","console","log","renderImage","_objectSpread","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","getHeight","field","numRows","row","col","at","getSkinType","i","j","piece","skinOffset","skinOffsetX","skinOffsetY","type","Error","context","getContext","page","fillStyle","tileSize","rows","_pieceColors$field$at","fillRect","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/components/Fumen/FumenImage/FumenImage.tsx"],"sourcesContent":["import type {\r\n    DependencyList,\r\n    EffectCallback,\r\n    FC,\r\n    MutableRefObject,\r\n} from \"react\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { encoder, decoder, Pages, Page, Field } from \"tetris-fumen\";\r\nimport { PieceType } from \"tetris-fumen/lib/defines\";\r\nimport skin from \"./owoskin.png\";\r\n\r\nconst imageTileSize = 96;\r\n\r\nconst pieceColors: Record<PieceType,{ normal: string; highlight?: string; skim?: string }> = {\r\n    I: { normal: \"#42afe1\", highlight: \"#6ceaff\", skim: \"#5cc7f9\" },\r\n    T: { normal: \"#9739a2\", highlight: \"#d958e9\", skim: \"#b94bc6\" },\r\n    S: { normal: \"#51b84d\", highlight: \"#84f880\", skim: \"#70d36d\" },\r\n    Z: { normal: \"#eb4f65\", highlight: \"#ff7f79\", skim: \"#f96c67\" },\r\n    L: { normal: \"#f38927\", highlight: \"#ffba59\", skim: \"#f99e4c\" },\r\n    J: { normal: \"#1165b5\", highlight: \"#339bff\", skim: \"#2c84da\" },\r\n    O: { normal: \"#f6d03c\", highlight: \"#ffff7f\", skim: \"#f9df6c\" },\r\n    X: { normal: \"#868686\", highlight: \"#dddddd\", skim: \"#bdbdbd\" },\r\n};\r\nconst skinOffsets: Partial<Record<PieceType, { x: number; y: number } | null>> = {\r\n    Z: {x: 0, y: 0},\r\n    L: {x: 4 * imageTileSize, y: 0},\r\n    O: {x: 8 * imageTileSize, y: 0},\r\n    S: {x: 12 * imageTileSize,y: 0},\r\n    I: {x: 0, y: 6 * imageTileSize},\r\n    J: {x: 4 * imageTileSize,y: 6 * imageTileSize},\r\n    T: {x: 8 * imageTileSize,y: 6 * imageTileSize}\r\n};\r\n\r\nconst skinType: Record<number, number> = {\r\n    0b0001: 0,\r\n    0b0011: 1, //1 16,\r\n    0b0111: 2, //2 22,\r\n    0b0101: 3, //3 17,\r\n    0b1001: 4,\r\n    0b1011: 5, //5 19,\r\n    0b1111: 6,\r\n    0b1101: 7, //7 23,\r\n    0b1000: 8,\r\n    0b1010: 9, //9 20,\r\n    0b1110: 10, //10 18,\r\n    0b1100: 11, //11 21,\r\n    0b0000: 12,\r\n    0b0010: 13,\r\n    0b0110: 14,\r\n    0b0100: 15,\r\n};\r\n\r\ninterface Props {\r\n    fumen: string;\r\n    showComments?: boolean;\r\n}\r\nconst skinImage = new Image();\r\nskinImage.src = skin;\r\n\r\nexport const FumenImage: FC<Props> = (props: Props) => {\r\n    const fumen = props.fumen;\r\n\r\n    const pages: Pages = decoder.decode(fumen);\r\n    const canvasRef: MutableRefObject<HTMLCanvasElement | null> = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        if (canvas == null) return;\r\n        console.log(\"Rendering \" + fumen);\r\n        \r\n        renderImage(canvas, pages);\r\n    }, [props.fumen]);\r\n\r\n    return (\r\n        <canvas\r\n            ref={canvasRef}\r\n            {...props}\r\n            width=\"500\"\r\n            height=\"200\"\r\n        />\r\n    );\r\n};\r\n\r\nconst getHeight = (field: Field): number => {\r\n    let numRows = 0; // counter for rows with at least 1 filled cell\r\n    for (let row = 0; row < 23; row++) {\r\n        for (let col = 0; col < 10; col++) { // assuming 10 columns typical for a Tetris field\r\n            if (field.at(col, row) !== \"_\") { // if the cell is filled\r\n                numRows++; // increment the counter\r\n                break; // no need to check more columns in this row\r\n            }\r\n        }\r\n    }\r\n    return numRows;\r\n};\r\n\r\nconst getSkinType = (\r\n    field: Field,\r\n    i: number,\r\n    j: number\r\n): { x: number; y: number } => {\r\n    const piece: PieceType = field.at(i, j);\r\n    const skinOffset = skinOffsets[piece];\r\n    if (skinOffset == null) return { x: 1024, y: 192 };\r\n    const { x: skinOffsetX, y: skinOffsetY } = skinOffset;\r\n\r\n    const type: number =\r\n        (j <= 23 && field.at(i, j + 1) == piece ? 8 : 0) +\r\n        (i > 0 && field.at(i - 1, j) == piece ? 4 : 0) +\r\n        (i <= 9 && field.at(i + 1, j) == piece ? 2 : 0) +\r\n        (j > 0 && field.at(i, j - 1) == piece ? 1 : 0);\r\n\r\n\r\n    //console.log(piece, type, j>0 && field.at(i,j-1) == piece ? 1 : 0);\r\n\r\n    let skin = skinType[type];\r\n\r\n    if(skin == 1 && field.at(i+1, j-1) != piece){\r\n        skin = 16\r\n    }else if(skin == 2 && field.at(i+1, j-1) != piece){\r\n        skin = 22\r\n    }else if(skin == 3 && field.at(i-1, j-1) != piece){\r\n        skin = 17\r\n    }else if(skin == 5 && field.at(i+1, j-1) != piece){\r\n        skin = 19\r\n    }else if (skin == 7 && field.at(i-1, j-1) != piece){\r\n        skin = 23\r\n    }else if (skin == 9 && field.at(i+1, j+1) != piece){\r\n        skin = 20\r\n    }else if (skin == 10 && field.at(i+1, j+1) != piece){\r\n        skin = 18\r\n    }else if (skin == 11 && field.at(i-1, j+1) != piece){\r\n        skin = 21\r\n    }\r\n    return {\r\n        x: skinOffsetX + (skin % 4) * imageTileSize,\r\n        y: skinOffsetY + ~~(skin / 4) * imageTileSize,\r\n    };\r\n};\r\n\r\nconst renderImage = (canvas: HTMLCanvasElement|null, pages: Pages) => {\r\n    if (canvas == null) throw new Error(\"canvas is undefined\");\r\n    const context = canvas.getContext(\"2d\");\r\n    if (context == null) throw new Error(\"context is undefined\");\r\n\r\n    const page = pages[0];\r\n    \r\n    //BACKGROUND COLOR\r\n    context.fillStyle = \"#FFFFFF\";\r\n\r\n\r\n    //context.fillRect(0, 0, context.canvas.width, context.canvas.height);\r\n\r\n    let tileSize = context.canvas.width / 10;\r\n    const field = page.field;\r\n\r\n    const rows = getHeight(field);\r\n    //console.log(`Rows:  ${rows}`);\r\n    \r\n\r\n\r\n    for (let j = 0; j < rows; j++) {\r\n        let skim = true;\r\n        for (let i = 0; i < 10; i++) {\r\n            if (field.at(i, j) != \"_\") {\r\n                //console.log(field.at(i,j));\r\n                context.fillStyle = pieceColors[field.at(i, j)].normal;\r\n                \r\n                //FUMEN-UTIL\r\n                context.fillRect(i * tileSize + 1, context.canvas.height - (j + 1) * tileSize + 1, tileSize - 2, tileSize - 2);\r\n                \r\n                \r\n                \r\n                //FOUR.LOL\r\n                context.fillRect(i * tileSize, context.canvas.height - (j + 1) * tileSize, tileSize, tileSize);\r\n                context.fillStyle = pieceColors[field.at(i, j)].highlight??context.fillStyle;\r\n\r\n\r\n\r\n                //CONNECTED SKIN\r\n                \r\n                /*const { x, y } = getSkinType(field, i, j);\r\n                if (skinImage.complete) {\r\n                    context.drawImage(\r\n                        skinImage,\r\n                        x,\r\n                        y,\r\n                        imageTileSize,\r\n                        imageTileSize,\r\n                        i * tileSize,\r\n                        context.canvas.height - (j + 1) * tileSize,\r\n                        tileSize,\r\n                        tileSize\r\n                    );\r\n                } else {\r\n                    skinImage.onload = function () {\r\n                        context.drawImage(\r\n                            skinImage,\r\n                            x,\r\n                            y,\r\n                            imageTileSize,\r\n                            imageTileSize,\r\n                            i * tileSize,\r\n                            context.canvas.height - (j + 1) * tileSize,\r\n                            tileSize,\r\n                            tileSize\r\n                        );\r\n                    };\r\n                }\r\n                */\r\n            } else {\r\n                skim = false;\r\n            }\r\n        }\r\n        if (skim) {\r\n            context.fillStyle = \"rgba(255,255,255,0.1)\";\r\n            context.fillRect(\r\n                0,\r\n                context.canvas.height - (j + 1) * tileSize,\r\n                10 * tileSize,\r\n                tileSize\r\n            );\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}