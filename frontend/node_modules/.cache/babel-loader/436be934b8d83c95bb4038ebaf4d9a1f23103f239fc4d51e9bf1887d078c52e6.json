{"ast":null,"code":"function checkPieces(queue, pieces) {\n  // Remove non-useful characters (mostly [])\n  pieces = pieces.replaceAll(\"*\", \"[TIJLOSZ]\");\n  pieces = pieces.replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\n\n  // Wrap standalone pieces into sets with a default count\n  pieces = pieces.replaceAll(/(?<=^|[\\]0-7!])([TIJLOSZ]+)(?=\\[|$)/g, \"$1\".split(\"\").map(p => \"[\".concat(p, \"]\")).join(\"\"));\n  console.log(pieces); // Debug output for transformed pieces string\n\n  for (let [_, set, count = 1] of Array.from(pieces.matchAll(/\\[(\\^?[TIJLOSZ]{0,7})\\](?:([!0-7]))?/g))) {\n    if (set.startsWith(\"^\")) set = \"TIJLOSZ\".split(\"\").filter(piece => !set.includes(piece)).join(\"\");\n    count = count === \"!\" ? set.length : Number(count);\n    console.log(set, count);\n    if (count > set.length) return false;\n  }\n  return true;\n}\n\n/*// Main method to check if a queue belongs to a set\r\n  export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split('{');\r\n    if(modifiers?.endsWith('}'))modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n    \r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n  }\r\n  \r\n  \r\n  \r\n  console.log(pieces(\"IJLS\", \"[IJLS]!{S<3}\"));\r\n  */\nexport default checkPieces;","map":{"version":3,"names":["checkPieces","queue","pieces","replaceAll","split","map","p","concat","join","console","log","_","set","count","Array","from","matchAll","startsWith","filter","piece","includes","length","Number"],"sources":["C:/Stuff/Github/peasea/src/scripts/pieces.tsx"],"sourcesContent":["function checkPieces(queue: string, pieces: string): boolean {\r\n    // Remove non-useful characters (mostly [])\r\n    pieces = pieces.replaceAll(\"*\", \"[TIJLOSZ]\");\r\n    pieces = pieces.replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\r\n\r\n    \r\n    \r\n    // Wrap standalone pieces into sets with a default count\r\n    pieces = pieces.replaceAll(/(?<=^|[\\]0-7!])([TIJLOSZ]+)(?=\\[|$)/g, \"$1\".split(\"\").map(p=>`[${p}]`).join(\"\"));\r\n\r\n    \r\n    console.log(pieces); // Debug output for transformed pieces string\r\n\r\n    for (let [_, set, count = 1] of Array.from(pieces.matchAll(/\\[(\\^?[TIJLOSZ]{0,7})\\](?:([!0-7]))?/g))) {\r\n        if (set.startsWith(\"^\")) set = \"TIJLOSZ\".split(\"\").filter(piece => !set.includes(piece)).join(\"\");\r\n        count = count === \"!\" ? set.length : Number(count);\r\n\r\n        console.log(set,count);\r\n        if(count > set.length)return false;\r\n\r\n        \r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/*// Main method to check if a queue belongs to a set\r\n  export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split('{');\r\n    if(modifiers?.endsWith('}'))modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n    \r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n  }\r\n  \r\n  \r\n  \r\n  console.log(pieces(\"IJLS\", \"[IJLS]!{S<3}\"));\r\n  */\r\nexport default checkPieces;\r\n"],"mappings":"AAAA,SAASA,WAAWA,CAACC,KAAa,EAAEC,MAAc,EAAW;EACzD;EACAA,MAAM,GAAGA,MAAM,CAACC,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;EAC5CD,MAAM,GAAGA,MAAM,CAACC,UAAU,CAAC,sBAAsB,EAAE,EAAE,CAAC;;EAItD;EACAD,MAAM,GAAGA,MAAM,CAACC,UAAU,CAAC,sCAAsC,EAAE,IAAI,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,GAAG,CAACC,CAAC,QAAAC,MAAA,CAAMD,CAAC,MAAG,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC;EAG5GC,OAAO,CAACC,GAAG,CAACR,MAAM,CAAC,CAAC,CAAC;;EAErB,KAAK,IAAI,CAACS,CAAC,EAAEC,GAAG,EAAEC,KAAK,GAAG,CAAC,CAAC,IAAIC,KAAK,CAACC,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,uCAAuC,CAAC,CAAC,EAAE;IAClG,IAAIJ,GAAG,CAACK,UAAU,CAAC,GAAG,CAAC,EAAEL,GAAG,GAAG,SAAS,CAACR,KAAK,CAAC,EAAE,CAAC,CAACc,MAAM,CAACC,KAAK,IAAI,CAACP,GAAG,CAACQ,QAAQ,CAACD,KAAK,CAAC,CAAC,CAACX,IAAI,CAAC,EAAE,CAAC;IACjGK,KAAK,GAAGA,KAAK,KAAK,GAAG,GAAGD,GAAG,CAACS,MAAM,GAAGC,MAAM,CAACT,KAAK,CAAC;IAElDJ,OAAO,CAACC,GAAG,CAACE,GAAG,EAACC,KAAK,CAAC;IACtB,IAAGA,KAAK,GAAGD,GAAG,CAACS,MAAM,EAAC,OAAO,KAAK;EAGtC;EAEA,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAerB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}