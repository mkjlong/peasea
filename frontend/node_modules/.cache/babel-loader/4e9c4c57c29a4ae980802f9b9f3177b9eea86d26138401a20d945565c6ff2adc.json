{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\components\\\\Fumen\\\\Fumen.tsx\",\n  _s = $RefreshSig$();\nimport classes from \"./Fumen.module.css\";\nimport { encoder, decoder } from 'tetris-fumen';\nimport { FumenImage } from './FumenImage/FumenImage';\nimport { useEffect, useRef, useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Fumen = props => {\n  _s();\n  var _currentPage$comment;\n  const {\n    fumen,\n    className,\n    showComments = true,\n    setFumen\n  } = props;\n  const commentRef = useRef(null);\n  let pages;\n  try {\n    pages = decoder.decode(fumen);\n  } catch (_unused) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  const [pageIndex, setPageIndex] = useState(0);\n  const currentPage = pages[pageIndex];\n  const [comment, setComment] = useState((_currentPage$comment = currentPage.comment) !== null && _currentPage$comment !== void 0 ? _currentPage$comment : \"\");\n\n  // Sync state when fumen changes from outside\n  useEffect(() => {\n    try {\n      var _page$comment;\n      const updatedPages = decoder.decode(fumen);\n      const page = updatedPages[pageIndex];\n      setComment((_page$comment = page.comment) !== null && _page$comment !== void 0 ? _page$comment : \"\");\n    } catch (_unused2) {}\n  }, [fumen, pageIndex]);\n  const handleCommentChange = e => {\n    const newComment = e.target.value;\n    setComment(newComment);\n    currentPage.comment = newComment;\n    if (setFumen) {\n      const updatedFumen = encoder.encode(pages);\n      setFumen(updatedFumen);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fumen + (className ? \" \".concat(className) : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(FumenImage, {\n      page: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: commentRef,\n      className: classes.comments,\n      value: comment,\n      onChange: handleCommentChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Fumen, \"nBIF8keJb6fgUVZVyFxVN96tacY=\");\n_c = Fumen;\nvar _c;\n$RefreshReg$(_c, \"Fumen\");","map":{"version":3,"names":["classes","encoder","decoder","FumenImage","useEffect","useRef","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Fumen","props","_s","_currentPage$comment","fumen","className","showComments","setFumen","commentRef","pages","decode","_unused","pageIndex","setPageIndex","currentPage","comment","setComment","_page$comment","updatedPages","page","_unused2","handleCommentChange","e","newComment","target","value","updatedFumen","encode","concat","children","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","comments","onChange","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/components/Fumen/Fumen.tsx"],"sourcesContent":["import classes from \"./Fumen.module.css\";\r\nimport type { FC } from 'react';\r\nimport { encoder, decoder, Pages } from 'tetris-fumen';\r\nimport { FumenImage } from './FumenImage/FumenImage';\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\ninterface Props {\r\n    className?: string;\r\n    fumen: string;\r\n    showComments?: boolean;\r\n    setFumen?: (newFumen: string) => void;\r\n}\r\n\r\nexport const Fumen: FC<Props> = (props: Props) => {\r\n    const { fumen, className, showComments = true, setFumen } = props;\r\n    const commentRef = useRef<HTMLInputElement>(null);\r\n\r\n    let pages: Pages;\r\n    try {\r\n        pages = decoder.decode(fumen);\r\n    } catch {\r\n        return <></>;\r\n    }\r\n\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    const currentPage = pages[pageIndex];\r\n    const [comment, setComment] = useState(currentPage.comment ?? \"\");\r\n\r\n    // Sync state when fumen changes from outside\r\n    useEffect(() => {\r\n        try {\r\n            const updatedPages = decoder.decode(fumen);\r\n            const page = updatedPages[pageIndex];\r\n            setComment(page.comment ?? \"\");\r\n        } catch {}\r\n    }, [fumen, pageIndex]);\r\n\r\n    const handleCommentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newComment = e.target.value;\r\n        setComment(newComment);\r\n        currentPage.comment = newComment;\r\n\r\n        if (setFumen) {\r\n            const updatedFumen = encoder.encode(pages);\r\n            setFumen(updatedFumen);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.fumen + (className ? ` ${className}` : \"\")}>\r\n            <FumenImage page={currentPage} />\r\n            {showComments && (\r\n                <input\r\n                    type=\"text\"\r\n                    ref={commentRef}\r\n                    className={classes.comments}\r\n                    value={comment}\r\n                    onChange={handleCommentChange}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,oBAAoB;AAExC,SAASC,OAAO,EAAEC,OAAO,QAAe,cAAc;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AASpD,OAAO,MAAMC,KAAgB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAAA,IAAAC,oBAAA;EAC9C,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,YAAY,GAAG,IAAI;IAAEC;EAAS,CAAC,GAAGN,KAAK;EACjE,MAAMO,UAAU,GAAGd,MAAM,CAAmB,IAAI,CAAC;EAEjD,IAAIe,KAAY;EAChB,IAAI;IACAA,KAAK,GAAGlB,OAAO,CAACmB,MAAM,CAACN,KAAK,CAAC;EACjC,CAAC,CAAC,OAAAO,OAAA,EAAM;IACJ,oBAAOZ,OAAA,CAAAF,SAAA,mBAAI,CAAC;EAChB;EAEA,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMmB,WAAW,GAAGL,KAAK,CAACG,SAAS,CAAC;EACpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,EAAAQ,oBAAA,GAACW,WAAW,CAACC,OAAO,cAAAZ,oBAAA,cAAAA,oBAAA,GAAI,EAAE,CAAC;;EAEjE;EACAV,SAAS,CAAC,MAAM;IACZ,IAAI;MAAA,IAAAwB,aAAA;MACA,MAAMC,YAAY,GAAG3B,OAAO,CAACmB,MAAM,CAACN,KAAK,CAAC;MAC1C,MAAMe,IAAI,GAAGD,YAAY,CAACN,SAAS,CAAC;MACpCI,UAAU,EAAAC,aAAA,GAACE,IAAI,CAACJ,OAAO,cAAAE,aAAA,cAAAA,aAAA,GAAI,EAAE,CAAC;IAClC,CAAC,CAAC,OAAAG,QAAA,EAAM,CAAC;EACb,CAAC,EAAE,CAAChB,KAAK,EAAEQ,SAAS,CAAC,CAAC;EAEtB,MAAMS,mBAAmB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACjCT,UAAU,CAACO,UAAU,CAAC;IACtBT,WAAW,CAACC,OAAO,GAAGQ,UAAU;IAEhC,IAAIhB,QAAQ,EAAE;MACV,MAAMmB,YAAY,GAAGpC,OAAO,CAACqC,MAAM,CAAClB,KAAK,CAAC;MAC1CF,QAAQ,CAACmB,YAAY,CAAC;IAC1B;EACJ,CAAC;EAED,oBACI3B,OAAA;IAAKM,SAAS,EAAEhB,OAAO,CAACe,KAAK,IAAIC,SAAS,OAAAuB,MAAA,CAAOvB,SAAS,IAAK,EAAE,CAAE;IAAAwB,QAAA,gBAC/D9B,OAAA,CAACP,UAAU;MAAC2B,IAAI,EAAEL;IAAY;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChC3B,YAAY,iBACTP,OAAA;MACImC,IAAI,EAAC,MAAM;MACXC,GAAG,EAAE3B,UAAW;MAChBH,SAAS,EAAEhB,OAAO,CAAC+C,QAAS;MAC5BX,KAAK,EAAEV,OAAQ;MACfsB,QAAQ,EAAEhB;IAAoB;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAjDWF,KAAgB;AAAAsC,EAAA,GAAhBtC,KAAgB;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}