{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\components\\\\Fumen\\\\Fumen.tsx\",\n  _s = $RefreshSig$();\nimport classes from \"./Fumen.module.css\";\nimport { decoder } from 'tetris-fumen';\nimport { FumenImage } from './FumenImage/FumenImage';\nimport { useEffect, useRef, useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Fumen = props => {\n  _s();\n  const {\n    fumen,\n    className,\n    showComments = true\n  } = props;\n  const commentRef = useRef(null);\n  let pages;\n  try {\n    pages = decoder.decode(fumen);\n  } catch (_unused) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n  const [pageIndex, setPageIndex] = useState(0);\n  const currentPage = pages[pageIndex];\n  const [comment, setComment] = useState(currentPage.comment || \"\");\n  useEffect(() => {\n    setComment(currentPage.comment || \"\");\n  }, [pageIndex]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.fumen + (className ? \" \".concat(className) : \"\"),\n    children: [/*#__PURE__*/_jsxDEV(FumenImage, {\n      page: currentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), showComments && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: commentRef,\n      className: classes.comments,\n      value: comment,\n      onChange: e => {\n        const newComment = e.target.value;\n        setComment(newComment);\n        currentPage.comment = newComment;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Fumen, \"fF/GLD1K9Qy5JR2yjEzv1r6thII=\");\n_c = Fumen;\nvar _c;\n$RefreshReg$(_c, \"Fumen\");","map":{"version":3,"names":["classes","decoder","FumenImage","useEffect","useRef","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Fumen","props","_s","fumen","className","showComments","commentRef","pages","decode","_unused","pageIndex","setPageIndex","currentPage","comment","setComment","concat","children","page","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","comments","value","onChange","e","newComment","target","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/components/Fumen/Fumen.tsx"],"sourcesContent":["import classes from \"./Fumen.module.css\";\r\nimport type { FC } from 'react';\r\nimport { encoder, decoder, Pages } from 'tetris-fumen';\r\nimport { FumenImage } from './FumenImage/FumenImage';\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\ninterface Props {\r\n    className?: string;\r\n    fumen: string;\r\n    showComments?: boolean;\r\n}\r\n\r\nexport const Fumen: FC<Props> = (props: Props) => {\r\n    const { fumen, className, showComments = true } = props;\r\n    const commentRef = useRef<HTMLInputElement>(null);\r\n\r\n    let pages: Pages;\r\n    try {\r\n        pages = decoder.decode(fumen);\r\n    } catch {\r\n        return <></>;\r\n    }\r\n\r\n    const [pageIndex, setPageIndex] = useState(0);\r\n    const currentPage = pages[pageIndex];\r\n    const [comment, setComment] = useState(currentPage.comment || \"\");\r\n\r\n    useEffect(() => {\r\n        setComment(currentPage.comment || \"\");\r\n    }, [pageIndex]);\r\n\r\n    return (\r\n        <div className={classes.fumen + (className ? ` ${className}` : \"\")}>\r\n            <FumenImage page={currentPage} />\r\n            {showComments && (\r\n                <input\r\n                    type=\"text\"\r\n                    ref={commentRef}\r\n                    className={classes.comments}\r\n                    value={comment}\r\n                    onChange={(e) => {\r\n                        const newComment = e.target.value;\r\n                        setComment(newComment);\r\n                        currentPage.comment = newComment;\r\n                    }}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,oBAAoB;AAExC,SAAkBC,OAAO,QAAe,cAAc;AACtD,SAASC,UAAU,QAAQ,yBAAyB;AACpD,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAQpD,OAAO,MAAMC,KAAgB,GAAIC,KAAY,IAAK;EAAAC,EAAA;EAC9C,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,YAAY,GAAG;EAAK,CAAC,GAAGJ,KAAK;EACvD,MAAMK,UAAU,GAAGZ,MAAM,CAAmB,IAAI,CAAC;EAEjD,IAAIa,KAAY;EAChB,IAAI;IACAA,KAAK,GAAGhB,OAAO,CAACiB,MAAM,CAACL,KAAK,CAAC;EACjC,CAAC,CAAC,OAAAM,OAAA,EAAM;IACJ,oBAAOV,OAAA,CAAAF,SAAA,mBAAI,CAAC;EAChB;EAEA,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMiB,WAAW,GAAGL,KAAK,CAACG,SAAS,CAAC;EACpC,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAACiB,WAAW,CAACC,OAAO,IAAI,EAAE,CAAC;EAEjEpB,SAAS,CAAC,MAAM;IACZqB,UAAU,CAACF,WAAW,CAACC,OAAO,IAAI,EAAE,CAAC;EACzC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,oBACIX,OAAA;IAAKK,SAAS,EAAEd,OAAO,CAACa,KAAK,IAAIC,SAAS,OAAAW,MAAA,CAAOX,SAAS,IAAK,EAAE,CAAE;IAAAY,QAAA,gBAC/DjB,OAAA,CAACP,UAAU;MAACyB,IAAI,EAAEL;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAChChB,YAAY,iBACTN,OAAA;MACIuB,IAAI,EAAC,MAAM;MACXC,GAAG,EAAEjB,UAAW;MAChBF,SAAS,EAAEd,OAAO,CAACkC,QAAS;MAC5BC,KAAK,EAAEZ,OAAQ;MACfa,QAAQ,EAAGC,CAAC,IAAK;QACb,MAAMC,UAAU,GAAGD,CAAC,CAACE,MAAM,CAACJ,KAAK;QACjCX,UAAU,CAACc,UAAU,CAAC;QACtBhB,WAAW,CAACC,OAAO,GAAGe,UAAU;MACpC;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CArCWF,KAAgB;AAAA8B,EAAA,GAAhB9B,KAAgB;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}