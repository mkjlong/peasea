{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\pages\\\\SetPage\\\\SetPage.tsx\",\n  _s = $RefreshSig$();\nimport classes from \"./SetPage.module.css\";\nimport SetChooser from \"../../components/SetChooser/SetChooser\";\nimport { useEffect } from \"react\";\nimport { useSidebar } from \"../../contexts/SidebarContext\";\nimport { useNavbar } from \"../../contexts/NavContext\";\nimport Method from \"../../scripts/Method\";\nimport MethodPreview from \"../../components/MethodPreview/MethodPreview\";\nimport { sortByPCOrder, pieces } from \"../../scripts/pieces\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sets = [{\n  title: \"Algebruh's 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/554411603609518095/161d78efc00421e3a4e62425221f5311.webp?size=40\",\n  author: \"algebruh\",\n  methods: \"29/35\",\n  setups: 40,\n  cover: \"100%\",\n  description: \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\"\n}, {\n  title: \"2nd 100% T\",\n  pfp: \"https://cdn.discordapp.com/avatars/402657980517974026/1f90c2454cdd8f7ad0111a83e66fc55a.webp?size=48\",\n  author: \"mkjl\",\n  methods: \"21/35\",\n  setups: 882,\n  cover: \"0.11%\",\n  description: \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\"\n}, {\n  title: \"Theoretical 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/427589146295664667/bfe2236004af8a55971181f3e629c4f3.webp?size=32\",\n  author: \"xp3\",\n  methods: \"342\",\n  setups: 352,\n  cover: \"100%\",\n  description: \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\"\n}, {\n  title: \"Beginner 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/1050907244193136785/0e027c306413ba120f8bf01cc1558e36.webp?size=40\",\n  author: \"10Penta\",\n  methods: \"\",\n  setups: 0,\n  cover: \"0%\",\n  description: \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\"\n}];\nconst SetPage = _ref => {\n  _s();\n  let {\n    pc\n  } = _ref;\n  const {\n    setSidebar\n  } = useSidebar();\n  const {\n    setNavbar\n  } = useNavbar();\n  const set = sets[0];\n  document.title = \"\".concat(pc).concat([\"\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\"][pc], \" PC\");\n  const containerRef = useRef(null);\n  const methodRefs = useRef([]);\n  const methods = [];\n  const seconds = pieces(\"**c\".concat([6, 3, 0, 4, 1, 5, 2][pc - 1])).filter(second => second.substring(1).includes(second.charAt(0)) || second === second.split('').sort(sortByPCOrder).join(\"\")).map(second => !second.substring(1).includes(second.charAt(0)) ? second : second.split(\"\").sort((a, b) => a === second.charAt(0) ? -1 : 0).join(''));\n  for (let second of seconds) {\n    methods.push({\n      method: new Method(\"weewoo\", second, []),\n      progress: Math.random() < 0.2 ? ~~(Math.random() * 2) : Math.random()\n    });\n  }\n  useEffect(() => {\n    setSidebar(\"Sets\", /*#__PURE__*/_jsxDEV(SetChooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }, this));\n    setNavbar(document.title, /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n\n    // Scroll to the first non-100% method\n    const firstIncomplete = methodRefs.current.find((el, idx) => methods[idx].progress < 1);\n    console.log(firstIncomplete);\n    if (firstIncomplete) {\n      firstIncomplete.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      });\n    }\n  }, []);\n  methods.sort((a, b) => b.progress - a.progress);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    ref: containerRef,\n    children: methods.map((method, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: el => methodRefs.current[i] = el,\n      children: /*#__PURE__*/_jsxDEV(MethodPreview, {\n        method: method.method,\n        progress: method.progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, method.method.getSpecificPC(), false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(SetPage, \"IKITCEapt40hBpelvl3md2/N8Z8=\", false, function () {\n  return [useSidebar, useNavbar];\n});\n_c = SetPage;\nexport default SetPage;\nvar _c;\n$RefreshReg$(_c, \"SetPage\");","map":{"version":3,"names":["classes","SetChooser","useEffect","useSidebar","useNavbar","Method","MethodPreview","sortByPCOrder","pieces","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","sets","title","pfp","author","methods","setups","cover","description","SetPage","_ref","_s","pc","setSidebar","setNavbar","set","document","concat","containerRef","methodRefs","seconds","filter","second","substring","includes","charAt","split","sort","join","map","a","b","push","method","progress","Math","random","fileName","_jsxFileName","lineNumber","columnNumber","firstIncomplete","current","find","el","idx","console","log","scrollIntoView","behavior","block","className","container","ref","children","i","getSpecificPC","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/pages/SetPage/SetPage.tsx"],"sourcesContent":["import MethodPage from \"../MethodPage/MethodPage\";\r\nimport classes from \"./SetPage.module.css\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport { Fumen } from \"../../components/Fumen/Fumen\";\r\nimport SetChooser from \"../../components/SetChooser/SetChooser\";\r\nimport { useEffect } from \"react\";\r\nimport { useSidebar } from \"../../contexts/SidebarContext\";\r\nimport { useNavbar } from \"../../contexts/NavContext\";\r\nimport Method from \"../../scripts/Method\";\r\nimport MethodPreview from \"../../components/MethodPreview/MethodPreview\";\r\nimport {sortByPCOrder, pieces} from \"../../scripts/pieces\";\r\nimport { useRef } from \"react\";\r\n\r\ninterface SetPage {\r\n    pc: number;\r\n}\r\nconst sets = [\r\n    {\r\n        title: \"Algebruh's 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/554411603609518095/161d78efc00421e3a4e62425221f5311.webp?size=40\",\r\n        author: \"algebruh\",\r\n        methods: \"29/35\",\r\n        setups: 40,\r\n        cover: \"100%\",\r\n        description:\r\n            \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\",\r\n    },\r\n    {\r\n        title: \"2nd 100% T\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/402657980517974026/1f90c2454cdd8f7ad0111a83e66fc55a.webp?size=48\",\r\n        author: \"mkjl\",\r\n        methods: \"21/35\",\r\n        setups: 882,\r\n        cover: \"0.11%\",\r\n        description:\r\n            \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\",\r\n    },\r\n    {\r\n        title: \"Theoretical 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/427589146295664667/bfe2236004af8a55971181f3e629c4f3.webp?size=32\",\r\n        author: \"xp3\",\r\n        methods: \"342\",\r\n        setups: 352,\r\n        cover: \"100%\",\r\n        description:\r\n            \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\",\r\n    },\r\n    {\r\n        title: \"Beginner 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/1050907244193136785/0e027c306413ba120f8bf01cc1558e36.webp?size=40\",\r\n        author: \"10Penta\",\r\n        methods: \"\",\r\n        setups: 0,\r\n        cover: \"0%\",\r\n        description:\r\n            \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\",\r\n    },\r\n];\r\n\r\nconst SetPage = ({ pc }: SetPage) => {\r\n    const { setSidebar } = useSidebar();\r\n    const { setNavbar } = useNavbar();\r\n    const set = sets[0];\r\n\r\n    document.title = `${pc}${[\"\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\"][pc]} PC`;\r\n\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const methodRefs = useRef<(HTMLDivElement | null)[]>([]);\r\n    const methods: {method:Method,progress:number}[] = [];\r\n    const seconds = pieces(`**c${[6, 3, 0, 4, 1, 5, 2][pc - 1]}`)\r\n        .filter(second => second.substring(1).includes(second.charAt(0)) || second === second.split('').sort(sortByPCOrder).join(\"\"))\r\n        .map(second => !second.substring(1).includes(second.charAt(0)) ? second : second.split(\"\").sort((a, b) => a === second.charAt(0) ? -1 : 0).join(''));\r\n\r\n    for (let second of seconds) {\r\n        methods.push({\r\n            method: new Method(\"weewoo\", second, []),\r\n            progress: Math.random() < 0.2 ? ~~(Math.random() * 2) : Math.random()\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        setSidebar(\"Sets\", <SetChooser />);\r\n        setNavbar(document.title, <></>);\r\n\r\n        // Scroll to the first non-100% method\r\n        const firstIncomplete = methodRefs.current.find((el, idx) => methods[idx].progress < 1);\r\n        console.log(firstIncomplete);\r\n        \r\n        if (firstIncomplete) {\r\n            firstIncomplete.scrollIntoView({ behavior: \"smooth\", block: \"center\" });\r\n        }\r\n    }, []);\r\n\r\n    \r\n\r\n    methods.sort((a, b) => b.progress - a.progress);\r\n\r\n    return (\r\n        <div className={classes.container} ref={containerRef}>\r\n            {methods.map((method, i) =>\r\n                <div\r\n                    key={method.method.getSpecificPC()}\r\n                    ref={el => methodRefs.current[i] = el}\r\n                >\r\n                    <MethodPreview method={method.method} progress={method.progress} />\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetPage"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}