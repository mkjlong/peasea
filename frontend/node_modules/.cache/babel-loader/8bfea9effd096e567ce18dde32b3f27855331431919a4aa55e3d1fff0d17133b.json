{"ast":null,"code":"import { normalizeInput, getCombinations } from \"../../scripts/pieces\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TestPage = () => {\n  console.time(\"normalizedInput\");\n  console.log(normalizeInput(\"[T*]c2[TIJ]p2[LOSZ]c3[TIJ]p3[SZ]c1[*]p4[TI]c2[TJ]p5[TIJLSZ]c6[Z]c1[T]p2[TIJLSZ]c3[ZS]p4[TJ]p2[T*]p5[TIJL]c3[O]c2[TJ]p1[TIJL]p2[TZ]c3[LOSZ]p4[TIJL]p3[TIJLSZ]c2[LOSZ]p5[T*]p6\"));\n  console.timeEnd(\"normalizedInput\");\n\n  // Test cases for getCombinations\n  console.log(\"Testing getCombinations...\");\n  console.log(getCombinations(\"TIJ\", 2)); // Expected: Set { \"TI\", \"TJ\", \"IJ\" }\n  console.log(getCombinations(\"TIJLOSZ\", 3)); // Expected: Set { \"TIJ\", \"TIL\", \"TIO\", ..., \"OSZ\" }\n  console.log(getCombinations(new Set([\"TIJ\", \"LOSZ\"]), 2)); // Expected: Set { \"TI\", \"TJ\", \"IJ\", \"LO\", \"LS\", \"LZ\", \"OS\", \"OZ\", \"SZ\" }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = TestPage;\nexport default TestPage;\nvar _c;\n$RefreshReg$(_c, \"TestPage\");","map":{"version":3,"names":["normalizeInput","getCombinations","Fragment","_Fragment","jsxDEV","_jsxDEV","TestPage","console","time","log","timeEnd","Set","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/pages/TestPage/TestPage.tsx"],"sourcesContent":["import { normalizeInput, getCombinations } from \"../../scripts/pieces\";\r\n\r\nconst TestPage = () => {\r\n    console.time(\"normalizedInput\");\r\n    console.log(normalizeInput(\"[T*]c2[TIJ]p2[LOSZ]c3[TIJ]p3[SZ]c1[*]p4[TI]c2[TJ]p5[TIJLSZ]c6[Z]c1[T]p2[TIJLSZ]c3[ZS]p4[TJ]p2[T*]p5[TIJL]c3[O]c2[TJ]p1[TIJL]p2[TZ]c3[LOSZ]p4[TIJL]p3[TIJLSZ]c2[LOSZ]p5[T*]p6\"));\r\n    console.timeEnd(\"normalizedInput\");\r\n\r\n    // Test cases for getCombinations\r\n    console.log(\"Testing getCombinations...\");\r\n    console.log(getCombinations(\"TIJ\", 2)); // Expected: Set { \"TI\", \"TJ\", \"IJ\" }\r\n    console.log(getCombinations(\"TIJLOSZ\", 3)); // Expected: Set { \"TIJ\", \"TIL\", \"TIO\", ..., \"OSZ\" }\r\n    console.log(getCombinations(new Set([\"TIJ\", \"LOSZ\"]), 2)); // Expected: Set { \"TI\", \"TJ\", \"IJ\", \"LO\", \"LS\", \"LZ\", \"OS\", \"OZ\", \"SZ\" }\r\n\r\n    return <></>;\r\n}\r\n\r\nexport default TestPage;"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,sBAAsB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnBC,OAAO,CAACC,IAAI,CAAC,iBAAiB,CAAC;EAC/BD,OAAO,CAACE,GAAG,CAACT,cAAc,CAAC,8KAA8K,CAAC,CAAC;EAC3MO,OAAO,CAACG,OAAO,CAAC,iBAAiB,CAAC;;EAElC;EACAH,OAAO,CAACE,GAAG,CAAC,4BAA4B,CAAC;EACzCF,OAAO,CAACE,GAAG,CAACR,eAAe,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACxCM,OAAO,CAACE,GAAG,CAACR,eAAe,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5CM,OAAO,CAACE,GAAG,CAACR,eAAe,CAAC,IAAIU,GAAG,CAAC,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE3D,oBAAON,OAAA,CAAAF,SAAA,mBAAI,CAAC;AAChB,CAAC;AAAAS,EAAA,GAZKN,QAAQ;AAcd,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}