{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\pages\\\\SetPage\\\\SetPage.tsx\",\n  _s = $RefreshSig$();\nimport classes from \"./SetPage.module.css\";\nimport SetChooser from \"../../components/SetChooser/SetChooser\";\nimport { useEffect } from \"react\";\nimport { useSidebar } from \"../../contexts/SidebarContext\";\nimport { useNavbar } from \"../../contexts/NavContext\";\nimport Method from \"../../scripts/Method\";\nimport MethodPreview from \"../../components/MethodPreview/MethodPreview\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sets = [{\n  title: \"Algebruh's 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/554411603609518095/161d78efc00421e3a4e62425221f5311.webp?size=40\",\n  author: \"algebruh\",\n  methods: \"29/35\",\n  setups: 40,\n  cover: \"100%\",\n  description: \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\"\n}, {\n  title: \"2nd 100% T\",\n  pfp: \"https://cdn.discordapp.com/avatars/402657980517974026/1f90c2454cdd8f7ad0111a83e66fc55a.webp?size=48\",\n  author: \"mkjl\",\n  methods: \"21/35\",\n  setups: 882,\n  cover: \"0.11%\",\n  description: \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\"\n}, {\n  title: \"Theoretical 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/427589146295664667/bfe2236004af8a55971181f3e629c4f3.webp?size=32\",\n  author: \"xp3\",\n  methods: \"342\",\n  setups: 352,\n  cover: \"100%\",\n  description: \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\"\n}, {\n  title: \"Beginner 2nd\",\n  pfp: \"https://cdn.discordapp.com/avatars/1050907244193136785/0e027c306413ba120f8bf01cc1558e36.webp?size=40\",\n  author: \"10Penta\",\n  methods: \"\",\n  setups: 0,\n  cover: \"0%\",\n  description: \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\"\n}];\nconst SetPage = _ref => {\n  _s();\n  let {\n    pc\n  } = _ref;\n  const {\n    setSidebar\n  } = useSidebar();\n  const {\n    setNavbar\n  } = useNavbar();\n  const set = sets[0];\n  document.title = \"\".concat(pc).concat([\"\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\"][pc], \" PC\");\n  useEffect(() => {\n    setSidebar(\"Sets\", /*#__PURE__*/_jsxDEV(SetChooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this));\n    setNavbar(\"2nd PC\", /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  }, []);\n  const seconds = [];\n  for (let i = 0; i < 7; i++) {\n    for (let j = i + 1; j < 7; j++) {\n      for (let k = j + 1; k < 7; k++) {\n        for (let l = k + 1; l < 7; l++) {\n          seconds.push(\"TIJLOSZ\"[i] + \"TIJLOSZ\"[j] + \"TIJLOSZ\"[k] + \"TIJLOSZ\"[l]);\n        }\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: seconds.map(second => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.specificPC,\n      children: /*#__PURE__*/_jsxDEV(MethodPreview, {\n        method: new Method(\"IJLS 100% T\", \"IJLS\", null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(SetPage, \"23szNUTmvzhZ/+ggC0YJ+NElEgs=\", false, function () {\n  return [useSidebar, useNavbar];\n});\n_c = SetPage;\nexport default SetPage;\nvar _c;\n$RefreshReg$(_c, \"SetPage\");","map":{"version":3,"names":["classes","SetChooser","useEffect","useSidebar","useNavbar","Method","MethodPreview","jsxDEV","_jsxDEV","Fragment","_Fragment","sets","title","pfp","author","methods","setups","cover","description","SetPage","_ref","_s","pc","setSidebar","setNavbar","set","document","concat","fileName","_jsxFileName","lineNumber","columnNumber","seconds","i","j","k","l","push","className","container","children","map","second","specificPC","method","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/pages/SetPage/SetPage.tsx"],"sourcesContent":["import MethodPage from \"../MethodPage/MethodPage\";\r\nimport classes from \"./SetPage.module.css\";\r\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\r\nimport { Fumen } from \"../../components/Fumen/Fumen\";\r\nimport SetChooser from \"../../components/SetChooser/SetChooser\";\r\nimport { useEffect } from \"react\";\r\nimport { useSidebar } from \"../../contexts/SidebarContext\";\r\nimport { useNavbar } from \"../../contexts/NavContext\";\r\nimport Method from \"../../scripts/Method\";\r\nimport MethodPreview from \"../../components/MethodPreview/MethodPreview\";\r\n\r\ninterface SetPage {\r\n    pc: number;\r\n}\r\nconst sets = [\r\n    {\r\n        title: \"Algebruh's 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/554411603609518095/161d78efc00421e3a4e62425221f5311.webp?size=40\",\r\n        author: \"algebruh\",\r\n        methods: \"29/35\",\r\n        setups: 40,\r\n        cover: \"100%\",\r\n        description:\r\n            \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\",\r\n    },\r\n    {\r\n        title: \"2nd 100% T\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/402657980517974026/1f90c2454cdd8f7ad0111a83e66fc55a.webp?size=48\",\r\n        author: \"mkjl\",\r\n        methods: \"21/35\",\r\n        setups: 882,\r\n        cover: \"0.11%\",\r\n        description:\r\n            \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\",\r\n    },\r\n    {\r\n        title: \"Theoretical 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/427589146295664667/bfe2236004af8a55971181f3e629c4f3.webp?size=32\",\r\n        author: \"xp3\",\r\n        methods: \"342\",\r\n        setups: 352,\r\n        cover: \"100%\",\r\n        description:\r\n            \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\",\r\n    },\r\n    {\r\n        title: \"Beginner 2nd\",\r\n        pfp: \"https://cdn.discordapp.com/avatars/1050907244193136785/0e027c306413ba120f8bf01cc1558e36.webp?size=40\",\r\n        author: \"10Penta\",\r\n        methods: \"\",\r\n        setups: 0,\r\n        cover: \"0%\",\r\n        description:\r\n            \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\",\r\n    },\r\n];\r\n\r\nconst SetPage = ({ pc }: SetPage) => {\r\n    const { setSidebar } = useSidebar();\r\n    const { setNavbar } = useNavbar();\r\n    const set = sets[0];\r\n    document.title = `${pc}${\r\n        [\"\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\"][pc]\r\n    } PC`;\r\n\r\n    useEffect(() => {\r\n        setSidebar(\r\n            \"Sets\",\r\n            <SetChooser />\r\n        );\r\n        setNavbar(\r\n            \"2nd PC\",\r\n            <></>\r\n        )\r\n    }, []);\r\n    \r\n\r\n    const seconds = [];\r\n    for (let i = 0; i < 7; i++) {\r\n        for (let j = i + 1; j < 7; j++) {\r\n            for (let k = j + 1; k < 7; k++) {\r\n                for (let l = k + 1; l < 7; l++) {\r\n                    seconds.push(\r\n                        \"TIJLOSZ\"[i] +\r\n                            \"TIJLOSZ\"[j] +\r\n                            \"TIJLOSZ\"[k] +\r\n                            \"TIJLOSZ\"[l]\r\n                    );\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            {seconds.map(second =>\r\n                <div className={classes.specificPC}>\r\n                    <MethodPreview method={new Method(\"IJLS 100% T\",\"IJLS\", null)}></MethodPreview>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}