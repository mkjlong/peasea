{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createActionEncoder = exports.createActionDecoder = void 0;\nvar defines_1 = require(\"./defines\");\nfunction decodeBool(n) {\n  return n !== 0;\n}\nvar createActionDecoder = function (width, fieldTop, garbageLine) {\n  var fieldMaxHeight = fieldTop + garbageLine;\n  var numFieldBlocks = fieldMaxHeight * width;\n  function decodePiece(n) {\n    switch (n) {\n      case 0:\n        return defines_1.Piece.Empty;\n      case 1:\n        return defines_1.Piece.I;\n      case 2:\n        return defines_1.Piece.L;\n      case 3:\n        return defines_1.Piece.O;\n      case 4:\n        return defines_1.Piece.Z;\n      case 5:\n        return defines_1.Piece.T;\n      case 6:\n        return defines_1.Piece.J;\n      case 7:\n        return defines_1.Piece.S;\n      case 8:\n        return defines_1.Piece.Gray;\n    }\n    throw new Error('Unexpected piece');\n  }\n  function decodeRotation(n) {\n    switch (n) {\n      case 0:\n        return defines_1.Rotation.Reverse;\n      case 1:\n        return defines_1.Rotation.Right;\n      case 2:\n        return defines_1.Rotation.Spawn;\n      case 3:\n        return defines_1.Rotation.Left;\n    }\n    throw new Error('Unexpected rotation');\n  }\n  function decodeCoordinate(n, piece, rotation) {\n    var x = n % width;\n    var originY = Math.floor(n / 10);\n    var y = fieldTop - originY - 1;\n    if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Left) {\n      x += 1;\n      y -= 1;\n    } else if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Reverse) {\n      x += 1;\n    } else if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Spawn) {\n      y -= 1;\n    } else if (piece === defines_1.Piece.I && rotation === defines_1.Rotation.Reverse) {\n      x += 1;\n    } else if (piece === defines_1.Piece.I && rotation === defines_1.Rotation.Left) {\n      y -= 1;\n    } else if (piece === defines_1.Piece.S && rotation === defines_1.Rotation.Spawn) {\n      y -= 1;\n    } else if (piece === defines_1.Piece.S && rotation === defines_1.Rotation.Right) {\n      x -= 1;\n    } else if (piece === defines_1.Piece.Z && rotation === defines_1.Rotation.Spawn) {\n      y -= 1;\n    } else if (piece === defines_1.Piece.Z && rotation === defines_1.Rotation.Left) {\n      x += 1;\n    }\n    return {\n      x: x,\n      y: y\n    };\n  }\n  return {\n    decode: function (v) {\n      var value = v;\n      var type = decodePiece(value % 8);\n      value = Math.floor(value / 8);\n      var rotation = decodeRotation(value % 4);\n      value = Math.floor(value / 4);\n      var coordinate = decodeCoordinate(value % numFieldBlocks, type, rotation);\n      value = Math.floor(value / numFieldBlocks);\n      var isBlockUp = decodeBool(value % 2);\n      value = Math.floor(value / 2);\n      var isMirror = decodeBool(value % 2);\n      value = Math.floor(value / 2);\n      var isColor = decodeBool(value % 2);\n      value = Math.floor(value / 2);\n      var isComment = decodeBool(value % 2);\n      value = Math.floor(value / 2);\n      var isLock = !decodeBool(value % 2);\n      return {\n        rise: isBlockUp,\n        mirror: isMirror,\n        colorize: isColor,\n        comment: isComment,\n        lock: isLock,\n        piece: __assign(__assign({}, coordinate), {\n          type: type,\n          rotation: rotation\n        })\n      };\n    }\n  };\n};\nexports.createActionDecoder = createActionDecoder;\nfunction encodeBool(flag) {\n  return flag ? 1 : 0;\n}\nvar createActionEncoder = function (width, fieldTop, garbageLine) {\n  var fieldMaxHeight = fieldTop + garbageLine;\n  var numFieldBlocks = fieldMaxHeight * width;\n  function encodePosition(operation) {\n    var type = operation.type,\n      rotation = operation.rotation;\n    var x = operation.x;\n    var y = operation.y;\n    if (!(0, defines_1.isMinoPiece)(type)) {\n      x = 0;\n      y = 22;\n    } else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Left) {\n      x -= 1;\n      y += 1;\n    } else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Reverse) {\n      x -= 1;\n    } else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Spawn) {\n      y += 1;\n    } else if (type === defines_1.Piece.I && rotation === defines_1.Rotation.Reverse) {\n      x -= 1;\n    } else if (type === defines_1.Piece.I && rotation === defines_1.Rotation.Left) {\n      y += 1;\n    } else if (type === defines_1.Piece.S && rotation === defines_1.Rotation.Spawn) {\n      y += 1;\n    } else if (type === defines_1.Piece.S && rotation === defines_1.Rotation.Right) {\n      x += 1;\n    } else if (type === defines_1.Piece.Z && rotation === defines_1.Rotation.Spawn) {\n      y += 1;\n    } else if (type === defines_1.Piece.Z && rotation === defines_1.Rotation.Left) {\n      x -= 1;\n    }\n    return (fieldTop - y - 1) * width + x;\n  }\n  function encodeRotation(_a) {\n    var type = _a.type,\n      rotation = _a.rotation;\n    if (!(0, defines_1.isMinoPiece)(type)) {\n      return 0;\n    }\n    switch (rotation) {\n      case defines_1.Rotation.Reverse:\n        return 0;\n      case defines_1.Rotation.Right:\n        return 1;\n      case defines_1.Rotation.Spawn:\n        return 2;\n      case defines_1.Rotation.Left:\n        return 3;\n    }\n    throw new Error('No reachable');\n  }\n  return {\n    encode: function (action) {\n      var lock = action.lock,\n        comment = action.comment,\n        colorize = action.colorize,\n        mirror = action.mirror,\n        rise = action.rise,\n        piece = action.piece;\n      var value = encodeBool(!lock);\n      value *= 2;\n      value += encodeBool(comment);\n      value *= 2;\n      value += encodeBool(colorize);\n      value *= 2;\n      value += encodeBool(mirror);\n      value *= 2;\n      value += encodeBool(rise);\n      value *= numFieldBlocks;\n      value += encodePosition(piece);\n      value *= 4;\n      value += encodeRotation(piece);\n      value *= 8;\n      value += piece.type;\n      return value;\n    }\n  };\n};\nexports.createActionEncoder = createActionEncoder;","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","createActionEncoder","createActionDecoder","defines_1","require","decodeBool","width","fieldTop","garbageLine","fieldMaxHeight","numFieldBlocks","decodePiece","Piece","Empty","I","L","O","Z","T","J","S","Gray","Error","decodeRotation","Rotation","Reverse","Right","Spawn","Left","decodeCoordinate","piece","rotation","x","originY","Math","floor","y","decode","v","type","coordinate","isBlockUp","isMirror","isColor","isComment","isLock","rise","mirror","colorize","comment","lock","encodeBool","flag","encodePosition","operation","isMinoPiece","encodeRotation","_a","encode","action"],"sources":["C:/Stuff/Github/peasea/node_modules/tetris-fumen/lib/action.js"],"sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createActionEncoder = exports.createActionDecoder = void 0;\nvar defines_1 = require(\"./defines\");\nfunction decodeBool(n) {\n    return n !== 0;\n}\nvar createActionDecoder = function (width, fieldTop, garbageLine) {\n    var fieldMaxHeight = fieldTop + garbageLine;\n    var numFieldBlocks = fieldMaxHeight * width;\n    function decodePiece(n) {\n        switch (n) {\n            case 0:\n                return defines_1.Piece.Empty;\n            case 1:\n                return defines_1.Piece.I;\n            case 2:\n                return defines_1.Piece.L;\n            case 3:\n                return defines_1.Piece.O;\n            case 4:\n                return defines_1.Piece.Z;\n            case 5:\n                return defines_1.Piece.T;\n            case 6:\n                return defines_1.Piece.J;\n            case 7:\n                return defines_1.Piece.S;\n            case 8:\n                return defines_1.Piece.Gray;\n        }\n        throw new Error('Unexpected piece');\n    }\n    function decodeRotation(n) {\n        switch (n) {\n            case 0:\n                return defines_1.Rotation.Reverse;\n            case 1:\n                return defines_1.Rotation.Right;\n            case 2:\n                return defines_1.Rotation.Spawn;\n            case 3:\n                return defines_1.Rotation.Left;\n        }\n        throw new Error('Unexpected rotation');\n    }\n    function decodeCoordinate(n, piece, rotation) {\n        var x = n % width;\n        var originY = Math.floor(n / 10);\n        var y = fieldTop - originY - 1;\n        if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Left) {\n            x += 1;\n            y -= 1;\n        }\n        else if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Reverse) {\n            x += 1;\n        }\n        else if (piece === defines_1.Piece.O && rotation === defines_1.Rotation.Spawn) {\n            y -= 1;\n        }\n        else if (piece === defines_1.Piece.I && rotation === defines_1.Rotation.Reverse) {\n            x += 1;\n        }\n        else if (piece === defines_1.Piece.I && rotation === defines_1.Rotation.Left) {\n            y -= 1;\n        }\n        else if (piece === defines_1.Piece.S && rotation === defines_1.Rotation.Spawn) {\n            y -= 1;\n        }\n        else if (piece === defines_1.Piece.S && rotation === defines_1.Rotation.Right) {\n            x -= 1;\n        }\n        else if (piece === defines_1.Piece.Z && rotation === defines_1.Rotation.Spawn) {\n            y -= 1;\n        }\n        else if (piece === defines_1.Piece.Z && rotation === defines_1.Rotation.Left) {\n            x += 1;\n        }\n        return { x: x, y: y };\n    }\n    return {\n        decode: function (v) {\n            var value = v;\n            var type = decodePiece(value % 8);\n            value = Math.floor(value / 8);\n            var rotation = decodeRotation(value % 4);\n            value = Math.floor(value / 4);\n            var coordinate = decodeCoordinate(value % numFieldBlocks, type, rotation);\n            value = Math.floor(value / numFieldBlocks);\n            var isBlockUp = decodeBool(value % 2);\n            value = Math.floor(value / 2);\n            var isMirror = decodeBool(value % 2);\n            value = Math.floor(value / 2);\n            var isColor = decodeBool(value % 2);\n            value = Math.floor(value / 2);\n            var isComment = decodeBool(value % 2);\n            value = Math.floor(value / 2);\n            var isLock = !decodeBool(value % 2);\n            return {\n                rise: isBlockUp,\n                mirror: isMirror,\n                colorize: isColor,\n                comment: isComment,\n                lock: isLock,\n                piece: __assign(__assign({}, coordinate), { type: type, rotation: rotation }),\n            };\n        },\n    };\n};\nexports.createActionDecoder = createActionDecoder;\nfunction encodeBool(flag) {\n    return flag ? 1 : 0;\n}\nvar createActionEncoder = function (width, fieldTop, garbageLine) {\n    var fieldMaxHeight = fieldTop + garbageLine;\n    var numFieldBlocks = fieldMaxHeight * width;\n    function encodePosition(operation) {\n        var type = operation.type, rotation = operation.rotation;\n        var x = operation.x;\n        var y = operation.y;\n        if (!(0, defines_1.isMinoPiece)(type)) {\n            x = 0;\n            y = 22;\n        }\n        else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Left) {\n            x -= 1;\n            y += 1;\n        }\n        else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Reverse) {\n            x -= 1;\n        }\n        else if (type === defines_1.Piece.O && rotation === defines_1.Rotation.Spawn) {\n            y += 1;\n        }\n        else if (type === defines_1.Piece.I && rotation === defines_1.Rotation.Reverse) {\n            x -= 1;\n        }\n        else if (type === defines_1.Piece.I && rotation === defines_1.Rotation.Left) {\n            y += 1;\n        }\n        else if (type === defines_1.Piece.S && rotation === defines_1.Rotation.Spawn) {\n            y += 1;\n        }\n        else if (type === defines_1.Piece.S && rotation === defines_1.Rotation.Right) {\n            x += 1;\n        }\n        else if (type === defines_1.Piece.Z && rotation === defines_1.Rotation.Spawn) {\n            y += 1;\n        }\n        else if (type === defines_1.Piece.Z && rotation === defines_1.Rotation.Left) {\n            x -= 1;\n        }\n        return (fieldTop - y - 1) * width + x;\n    }\n    function encodeRotation(_a) {\n        var type = _a.type, rotation = _a.rotation;\n        if (!(0, defines_1.isMinoPiece)(type)) {\n            return 0;\n        }\n        switch (rotation) {\n            case defines_1.Rotation.Reverse:\n                return 0;\n            case defines_1.Rotation.Right:\n                return 1;\n            case defines_1.Rotation.Spawn:\n                return 2;\n            case defines_1.Rotation.Left:\n                return 3;\n        }\n        throw new Error('No reachable');\n    }\n    return {\n        encode: function (action) {\n            var lock = action.lock, comment = action.comment, colorize = action.colorize, mirror = action.mirror, rise = action.rise, piece = action.piece;\n            var value = encodeBool(!lock);\n            value *= 2;\n            value += encodeBool(comment);\n            value *= 2;\n            value += (encodeBool(colorize));\n            value *= 2;\n            value += encodeBool(mirror);\n            value *= 2;\n            value += encodeBool(rise);\n            value *= numFieldBlocks;\n            value += encodePosition(piece);\n            value *= 4;\n            value += encodeRotation(piece);\n            value *= 8;\n            value += piece.type;\n            return value;\n        },\n    };\n};\nexports.createActionEncoder = createActionEncoder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}