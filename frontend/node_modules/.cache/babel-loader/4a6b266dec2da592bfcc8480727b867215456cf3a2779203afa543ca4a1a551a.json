{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPieces = exports.getBlocks = exports.getBlockXYs = exports.getBlockPositions = exports.PlayField = exports.InnerField = exports.createInnerField = exports.createNewInnerField = void 0;\nvar defines_1 = require(\"./defines\");\nvar FieldConstants = {\n  Width: 10,\n  Height: 23,\n  PlayBlocks: 23 * 10 // Height * Width\n};\nfunction createNewInnerField() {\n  return new InnerField({});\n}\nexports.createNewInnerField = createNewInnerField;\nfunction createInnerField(field) {\n  var innerField = new InnerField({});\n  for (var y = -1; y < FieldConstants.Height; y += 1) {\n    for (var x = 0; x < FieldConstants.Width; x += 1) {\n      var at = field.at(x, y);\n      innerField.setNumberAt(x, y, (0, defines_1.parsePiece)(at));\n    }\n  }\n  return innerField;\n}\nexports.createInnerField = createInnerField;\nvar InnerField = /** @class */function () {\n  function InnerField(_a) {\n    var _b = _a.field,\n      field = _b === void 0 ? InnerField.create(FieldConstants.PlayBlocks) : _b,\n      _c = _a.garbage,\n      garbage = _c === void 0 ? InnerField.create(FieldConstants.Width) : _c;\n    this.field = field;\n    this.garbage = garbage;\n  }\n  InnerField.create = function (length) {\n    return new PlayField({\n      length: length\n    });\n  };\n  InnerField.prototype.fill = function (operation) {\n    this.field.fill(operation);\n  };\n  InnerField.prototype.fillAll = function (positions, type) {\n    this.field.fillAll(positions, type);\n  };\n  InnerField.prototype.canFill = function (piece, rotation, x, y) {\n    var _this = this;\n    var positions = getBlockPositions(piece, rotation, x, y);\n    return positions.every(function (_a) {\n      var px = _a[0],\n        py = _a[1];\n      return 0 <= px && px < 10 && 0 <= py && py < FieldConstants.Height && _this.getNumberAt(px, py) === defines_1.Piece.Empty;\n    });\n  };\n  InnerField.prototype.canFillAll = function (positions) {\n    var _this = this;\n    return positions.every(function (_a) {\n      var x = _a.x,\n        y = _a.y;\n      return 0 <= x && x < 10 && 0 <= y && y < FieldConstants.Height && _this.getNumberAt(x, y) === defines_1.Piece.Empty;\n    });\n  };\n  InnerField.prototype.isOnGround = function (piece, rotation, x, y) {\n    return !this.canFill(piece, rotation, x, y - 1);\n  };\n  InnerField.prototype.clearLine = function () {\n    this.field.clearLine();\n  };\n  InnerField.prototype.riseGarbage = function () {\n    this.field.up(this.garbage);\n    this.garbage.clearAll();\n  };\n  InnerField.prototype.mirror = function () {\n    this.field.mirror();\n  };\n  InnerField.prototype.shiftToLeft = function () {\n    this.field.shiftToLeft();\n  };\n  InnerField.prototype.shiftToRight = function () {\n    this.field.shiftToRight();\n  };\n  InnerField.prototype.shiftToUp = function () {\n    this.field.shiftToUp();\n  };\n  InnerField.prototype.shiftToBottom = function () {\n    this.field.shiftToBottom();\n  };\n  InnerField.prototype.copy = function () {\n    return new InnerField({\n      field: this.field.copy(),\n      garbage: this.garbage.copy()\n    });\n  };\n  InnerField.prototype.equals = function (other) {\n    return this.field.equals(other.field) && this.garbage.equals(other.garbage);\n  };\n  InnerField.prototype.addNumber = function (x, y, value) {\n    if (0 <= y) {\n      this.field.addOffset(x, y, value);\n    } else {\n      this.garbage.addOffset(x, -(y + 1), value);\n    }\n  };\n  InnerField.prototype.setNumberFieldAt = function (index, value) {\n    this.field.setAt(index, value);\n  };\n  InnerField.prototype.setNumberGarbageAt = function (index, value) {\n    this.garbage.setAt(index, value);\n  };\n  InnerField.prototype.setNumberAt = function (x, y, value) {\n    return 0 <= y ? this.field.set(x, y, value) : this.garbage.set(x, -(y + 1), value);\n  };\n  InnerField.prototype.getNumberAt = function (x, y) {\n    return 0 <= y ? this.field.get(x, y) : this.garbage.get(x, -(y + 1));\n  };\n  InnerField.prototype.getNumberAtIndex = function (index, isField) {\n    if (isField) {\n      return this.getNumberAt(index % 10, Math.floor(index / 10));\n    }\n    return this.getNumberAt(index % 10, -(Math.floor(index / 10) + 1));\n  };\n  InnerField.prototype.toFieldNumberArray = function () {\n    return this.field.toArray();\n  };\n  InnerField.prototype.toGarbageNumberArray = function () {\n    return this.garbage.toArray();\n  };\n  return InnerField;\n}();\nexports.InnerField = InnerField;\nvar PlayField = /** @class */function () {\n  function PlayField(_a) {\n    var pieces = _a.pieces,\n      _b = _a.length,\n      length = _b === void 0 ? FieldConstants.PlayBlocks : _b;\n    if (pieces !== undefined) {\n      this.pieces = pieces;\n    } else {\n      this.pieces = Array.from({\n        length: length\n      }).map(function () {\n        return defines_1.Piece.Empty;\n      });\n    }\n    this.length = length;\n  }\n  PlayField.load = function () {\n    var lines = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      lines[_i] = arguments[_i];\n    }\n    var blocks = lines.join('').trim();\n    return PlayField.loadInner(blocks);\n  };\n  PlayField.loadMinify = function () {\n    var lines = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      lines[_i] = arguments[_i];\n    }\n    var blocks = lines.join('').trim();\n    return PlayField.loadInner(blocks, blocks.length);\n  };\n  PlayField.loadInner = function (blocks, length) {\n    var len = length !== undefined ? length : blocks.length;\n    if (len % 10 !== 0) {\n      throw new Error('Num of blocks in field should be mod 10');\n    }\n    var field = length !== undefined ? new PlayField({\n      length: length\n    }) : new PlayField({});\n    for (var index = 0; index < len; index += 1) {\n      var block = blocks[index];\n      field.set(index % 10, Math.floor((len - index - 1) / 10), (0, defines_1.parsePiece)(block));\n    }\n    return field;\n  };\n  PlayField.prototype.get = function (x, y) {\n    return this.pieces[x + y * FieldConstants.Width];\n  };\n  PlayField.prototype.addOffset = function (x, y, value) {\n    this.pieces[x + y * FieldConstants.Width] += value;\n  };\n  PlayField.prototype.set = function (x, y, piece) {\n    this.setAt(x + y * FieldConstants.Width, piece);\n  };\n  PlayField.prototype.setAt = function (index, piece) {\n    this.pieces[index] = piece;\n  };\n  PlayField.prototype.fill = function (_a) {\n    var type = _a.type,\n      rotation = _a.rotation,\n      x = _a.x,\n      y = _a.y;\n    var blocks = getBlocks(type, rotation);\n    for (var _i = 0, blocks_1 = blocks; _i < blocks_1.length; _i++) {\n      var block = blocks_1[_i];\n      var _b = [x + block[0], y + block[1]],\n        nx = _b[0],\n        ny = _b[1];\n      this.set(nx, ny, type);\n    }\n  };\n  PlayField.prototype.fillAll = function (positions, type) {\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n      var _a = positions_1[_i],\n        x = _a.x,\n        y = _a.y;\n      this.set(x, y, type);\n    }\n  };\n  PlayField.prototype.clearLine = function () {\n    var newField = this.pieces.concat();\n    var top = this.pieces.length / FieldConstants.Width - 1;\n    for (var y = top; 0 <= y; y -= 1) {\n      var line = this.pieces.slice(y * FieldConstants.Width, (y + 1) * FieldConstants.Width);\n      var isFilled = line.every(function (value) {\n        return value !== defines_1.Piece.Empty;\n      });\n      if (isFilled) {\n        var bottom = newField.slice(0, y * FieldConstants.Width);\n        var over = newField.slice((y + 1) * FieldConstants.Width);\n        newField = bottom.concat(over, Array.from({\n          length: FieldConstants.Width\n        }).map(function () {\n          return defines_1.Piece.Empty;\n        }));\n      }\n    }\n    this.pieces = newField;\n  };\n  PlayField.prototype.up = function (blockUp) {\n    this.pieces = blockUp.pieces.concat(this.pieces).slice(0, this.length);\n  };\n  PlayField.prototype.mirror = function () {\n    var newField = [];\n    for (var y = 0; y < this.pieces.length; y += 1) {\n      var line = this.pieces.slice(y * FieldConstants.Width, (y + 1) * FieldConstants.Width);\n      line.reverse();\n      for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n        var obj = line_1[_i];\n        newField.push(obj);\n      }\n    }\n    this.pieces = newField;\n  };\n  PlayField.prototype.shiftToLeft = function () {\n    var height = this.pieces.length / 10;\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < FieldConstants.Width - 1; x += 1) {\n        this.pieces[x + y * FieldConstants.Width] = this.pieces[x + 1 + y * FieldConstants.Width];\n      }\n      this.pieces[9 + y * FieldConstants.Width] = defines_1.Piece.Empty;\n    }\n  };\n  PlayField.prototype.shiftToRight = function () {\n    var height = this.pieces.length / 10;\n    for (var y = 0; y < height; y += 1) {\n      for (var x = FieldConstants.Width - 1; 1 <= x; x -= 1) {\n        this.pieces[x + y * FieldConstants.Width] = this.pieces[x - 1 + y * FieldConstants.Width];\n      }\n      this.pieces[y * FieldConstants.Width] = defines_1.Piece.Empty;\n    }\n  };\n  PlayField.prototype.shiftToUp = function () {\n    var blanks = Array.from({\n      length: 10\n    }).map(function () {\n      return defines_1.Piece.Empty;\n    });\n    this.pieces = blanks.concat(this.pieces).slice(0, this.length);\n  };\n  PlayField.prototype.shiftToBottom = function () {\n    var blanks = Array.from({\n      length: 10\n    }).map(function () {\n      return defines_1.Piece.Empty;\n    });\n    this.pieces = this.pieces.slice(10, this.length).concat(blanks);\n  };\n  PlayField.prototype.toArray = function () {\n    return this.pieces.concat();\n  };\n  Object.defineProperty(PlayField.prototype, \"numOfBlocks\", {\n    get: function () {\n      return this.pieces.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PlayField.prototype.copy = function () {\n    return new PlayField({\n      pieces: this.pieces.concat(),\n      length: this.length\n    });\n  };\n  PlayField.prototype.toShallowArray = function () {\n    return this.pieces;\n  };\n  PlayField.prototype.clearAll = function () {\n    this.pieces = this.pieces.map(function () {\n      return defines_1.Piece.Empty;\n    });\n  };\n  PlayField.prototype.equals = function (other) {\n    if (this.pieces.length !== other.pieces.length) {\n      return false;\n    }\n    for (var index = 0; index < this.pieces.length; index += 1) {\n      if (this.pieces[index] !== other.pieces[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return PlayField;\n}();\nexports.PlayField = PlayField;\nfunction getBlockPositions(piece, rotation, x, y) {\n  return getBlocks(piece, rotation).map(function (position) {\n    position[0] += x;\n    position[1] += y;\n    return position;\n  });\n}\nexports.getBlockPositions = getBlockPositions;\nfunction getBlockXYs(piece, rotation, x, y) {\n  return getBlocks(piece, rotation).map(function (position) {\n    return {\n      x: position[0] + x,\n      y: position[1] + y\n    };\n  });\n}\nexports.getBlockXYs = getBlockXYs;\nfunction getBlocks(piece, rotation) {\n  var blocks = getPieces(piece);\n  switch (rotation) {\n    case defines_1.Rotation.Spawn:\n      return blocks;\n    case defines_1.Rotation.Left:\n      return rotateLeft(blocks);\n    case defines_1.Rotation.Reverse:\n      return rotateReverse(blocks);\n    case defines_1.Rotation.Right:\n      return rotateRight(blocks);\n  }\n  throw new Error('Unsupported block');\n}\nexports.getBlocks = getBlocks;\nfunction getPieces(piece) {\n  switch (piece) {\n    case defines_1.Piece.I:\n      return [[0, 0], [-1, 0], [1, 0], [2, 0]];\n    case defines_1.Piece.T:\n      return [[0, 0], [-1, 0], [1, 0], [0, 1]];\n    case defines_1.Piece.O:\n      return [[0, 0], [1, 0], [0, 1], [1, 1]];\n    case defines_1.Piece.L:\n      return [[0, 0], [-1, 0], [1, 0], [1, 1]];\n    case defines_1.Piece.J:\n      return [[0, 0], [-1, 0], [1, 0], [-1, 1]];\n    case defines_1.Piece.S:\n      return [[0, 0], [-1, 0], [0, 1], [1, 1]];\n    case defines_1.Piece.Z:\n      return [[0, 0], [1, 0], [0, 1], [-1, 1]];\n  }\n  throw new Error('Unsupported rotation');\n}\nexports.getPieces = getPieces;\nfunction rotateRight(positions) {\n  return positions.map(function (current) {\n    return [current[1], -current[0]];\n  });\n}\nfunction rotateLeft(positions) {\n  return positions.map(function (current) {\n    return [-current[1], current[0]];\n  });\n}\nfunction rotateReverse(positions) {\n  return positions.map(function (current) {\n    return [-current[0], -current[1]];\n  });\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getPieces","getBlocks","getBlockXYs","getBlockPositions","PlayField","InnerField","createInnerField","createNewInnerField","defines_1","require","FieldConstants","Width","Height","PlayBlocks","field","innerField","y","x","at","setNumberAt","parsePiece","_a","_b","create","_c","garbage","length","prototype","fill","operation","fillAll","positions","type","canFill","piece","rotation","_this","every","px","py","getNumberAt","Piece","Empty","canFillAll","isOnGround","clearLine","riseGarbage","up","clearAll","mirror","shiftToLeft","shiftToRight","shiftToUp","shiftToBottom","copy","equals","other","addNumber","addOffset","setNumberFieldAt","index","setAt","setNumberGarbageAt","set","get","getNumberAtIndex","isField","Math","floor","toFieldNumberArray","toArray","toGarbageNumberArray","pieces","undefined","Array","from","map","load","lines","_i","arguments","blocks","join","trim","loadInner","loadMinify","len","Error","block","blocks_1","nx","ny","positions_1","newField","concat","top","line","slice","isFilled","bottom","over","blockUp","reverse","line_1","obj","push","height","blanks","enumerable","configurable","toShallowArray","position","Rotation","Spawn","Left","rotateLeft","Reverse","rotateReverse","Right","rotateRight","I","T","O","L","J","S","Z","current"],"sources":["C:/Stuff/Github/peasea/node_modules/tetris-fumen/lib/inner_field.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPieces = exports.getBlocks = exports.getBlockXYs = exports.getBlockPositions = exports.PlayField = exports.InnerField = exports.createInnerField = exports.createNewInnerField = void 0;\nvar defines_1 = require(\"./defines\");\nvar FieldConstants = {\n    Width: 10,\n    Height: 23,\n    PlayBlocks: 23 * 10, // Height * Width\n};\nfunction createNewInnerField() {\n    return new InnerField({});\n}\nexports.createNewInnerField = createNewInnerField;\nfunction createInnerField(field) {\n    var innerField = new InnerField({});\n    for (var y = -1; y < FieldConstants.Height; y += 1) {\n        for (var x = 0; x < FieldConstants.Width; x += 1) {\n            var at = field.at(x, y);\n            innerField.setNumberAt(x, y, (0, defines_1.parsePiece)(at));\n        }\n    }\n    return innerField;\n}\nexports.createInnerField = createInnerField;\nvar InnerField = /** @class */ (function () {\n    function InnerField(_a) {\n        var _b = _a.field, field = _b === void 0 ? InnerField.create(FieldConstants.PlayBlocks) : _b, _c = _a.garbage, garbage = _c === void 0 ? InnerField.create(FieldConstants.Width) : _c;\n        this.field = field;\n        this.garbage = garbage;\n    }\n    InnerField.create = function (length) {\n        return new PlayField({ length: length });\n    };\n    InnerField.prototype.fill = function (operation) {\n        this.field.fill(operation);\n    };\n    InnerField.prototype.fillAll = function (positions, type) {\n        this.field.fillAll(positions, type);\n    };\n    InnerField.prototype.canFill = function (piece, rotation, x, y) {\n        var _this = this;\n        var positions = getBlockPositions(piece, rotation, x, y);\n        return positions.every(function (_a) {\n            var px = _a[0], py = _a[1];\n            return 0 <= px && px < 10\n                && 0 <= py && py < FieldConstants.Height\n                && _this.getNumberAt(px, py) === defines_1.Piece.Empty;\n        });\n    };\n    InnerField.prototype.canFillAll = function (positions) {\n        var _this = this;\n        return positions.every(function (_a) {\n            var x = _a.x, y = _a.y;\n            return 0 <= x && x < 10\n                && 0 <= y && y < FieldConstants.Height\n                && _this.getNumberAt(x, y) === defines_1.Piece.Empty;\n        });\n    };\n    InnerField.prototype.isOnGround = function (piece, rotation, x, y) {\n        return !this.canFill(piece, rotation, x, y - 1);\n    };\n    InnerField.prototype.clearLine = function () {\n        this.field.clearLine();\n    };\n    InnerField.prototype.riseGarbage = function () {\n        this.field.up(this.garbage);\n        this.garbage.clearAll();\n    };\n    InnerField.prototype.mirror = function () {\n        this.field.mirror();\n    };\n    InnerField.prototype.shiftToLeft = function () {\n        this.field.shiftToLeft();\n    };\n    InnerField.prototype.shiftToRight = function () {\n        this.field.shiftToRight();\n    };\n    InnerField.prototype.shiftToUp = function () {\n        this.field.shiftToUp();\n    };\n    InnerField.prototype.shiftToBottom = function () {\n        this.field.shiftToBottom();\n    };\n    InnerField.prototype.copy = function () {\n        return new InnerField({ field: this.field.copy(), garbage: this.garbage.copy() });\n    };\n    InnerField.prototype.equals = function (other) {\n        return this.field.equals(other.field) && this.garbage.equals(other.garbage);\n    };\n    InnerField.prototype.addNumber = function (x, y, value) {\n        if (0 <= y) {\n            this.field.addOffset(x, y, value);\n        }\n        else {\n            this.garbage.addOffset(x, -(y + 1), value);\n        }\n    };\n    InnerField.prototype.setNumberFieldAt = function (index, value) {\n        this.field.setAt(index, value);\n    };\n    InnerField.prototype.setNumberGarbageAt = function (index, value) {\n        this.garbage.setAt(index, value);\n    };\n    InnerField.prototype.setNumberAt = function (x, y, value) {\n        return 0 <= y ? this.field.set(x, y, value) : this.garbage.set(x, -(y + 1), value);\n    };\n    InnerField.prototype.getNumberAt = function (x, y) {\n        return 0 <= y ? this.field.get(x, y) : this.garbage.get(x, -(y + 1));\n    };\n    InnerField.prototype.getNumberAtIndex = function (index, isField) {\n        if (isField) {\n            return this.getNumberAt(index % 10, Math.floor(index / 10));\n        }\n        return this.getNumberAt(index % 10, -(Math.floor(index / 10) + 1));\n    };\n    InnerField.prototype.toFieldNumberArray = function () {\n        return this.field.toArray();\n    };\n    InnerField.prototype.toGarbageNumberArray = function () {\n        return this.garbage.toArray();\n    };\n    return InnerField;\n}());\nexports.InnerField = InnerField;\nvar PlayField = /** @class */ (function () {\n    function PlayField(_a) {\n        var pieces = _a.pieces, _b = _a.length, length = _b === void 0 ? FieldConstants.PlayBlocks : _b;\n        if (pieces !== undefined) {\n            this.pieces = pieces;\n        }\n        else {\n            this.pieces = Array.from({ length: length }).map(function () { return defines_1.Piece.Empty; });\n        }\n        this.length = length;\n    }\n    PlayField.load = function () {\n        var lines = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            lines[_i] = arguments[_i];\n        }\n        var blocks = lines.join('').trim();\n        return PlayField.loadInner(blocks);\n    };\n    PlayField.loadMinify = function () {\n        var lines = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            lines[_i] = arguments[_i];\n        }\n        var blocks = lines.join('').trim();\n        return PlayField.loadInner(blocks, blocks.length);\n    };\n    PlayField.loadInner = function (blocks, length) {\n        var len = length !== undefined ? length : blocks.length;\n        if (len % 10 !== 0) {\n            throw new Error('Num of blocks in field should be mod 10');\n        }\n        var field = length !== undefined ? new PlayField({ length: length }) : new PlayField({});\n        for (var index = 0; index < len; index += 1) {\n            var block = blocks[index];\n            field.set(index % 10, Math.floor((len - index - 1) / 10), (0, defines_1.parsePiece)(block));\n        }\n        return field;\n    };\n    PlayField.prototype.get = function (x, y) {\n        return this.pieces[x + y * FieldConstants.Width];\n    };\n    PlayField.prototype.addOffset = function (x, y, value) {\n        this.pieces[x + y * FieldConstants.Width] += value;\n    };\n    PlayField.prototype.set = function (x, y, piece) {\n        this.setAt(x + y * FieldConstants.Width, piece);\n    };\n    PlayField.prototype.setAt = function (index, piece) {\n        this.pieces[index] = piece;\n    };\n    PlayField.prototype.fill = function (_a) {\n        var type = _a.type, rotation = _a.rotation, x = _a.x, y = _a.y;\n        var blocks = getBlocks(type, rotation);\n        for (var _i = 0, blocks_1 = blocks; _i < blocks_1.length; _i++) {\n            var block = blocks_1[_i];\n            var _b = [x + block[0], y + block[1]], nx = _b[0], ny = _b[1];\n            this.set(nx, ny, type);\n        }\n    };\n    PlayField.prototype.fillAll = function (positions, type) {\n        for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n            var _a = positions_1[_i], x = _a.x, y = _a.y;\n            this.set(x, y, type);\n        }\n    };\n    PlayField.prototype.clearLine = function () {\n        var newField = this.pieces.concat();\n        var top = this.pieces.length / FieldConstants.Width - 1;\n        for (var y = top; 0 <= y; y -= 1) {\n            var line = this.pieces.slice(y * FieldConstants.Width, (y + 1) * FieldConstants.Width);\n            var isFilled = line.every(function (value) { return value !== defines_1.Piece.Empty; });\n            if (isFilled) {\n                var bottom = newField.slice(0, y * FieldConstants.Width);\n                var over = newField.slice((y + 1) * FieldConstants.Width);\n                newField = bottom.concat(over, Array.from({ length: FieldConstants.Width }).map(function () { return defines_1.Piece.Empty; }));\n            }\n        }\n        this.pieces = newField;\n    };\n    PlayField.prototype.up = function (blockUp) {\n        this.pieces = blockUp.pieces.concat(this.pieces).slice(0, this.length);\n    };\n    PlayField.prototype.mirror = function () {\n        var newField = [];\n        for (var y = 0; y < this.pieces.length; y += 1) {\n            var line = this.pieces.slice(y * FieldConstants.Width, (y + 1) * FieldConstants.Width);\n            line.reverse();\n            for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n                var obj = line_1[_i];\n                newField.push(obj);\n            }\n        }\n        this.pieces = newField;\n    };\n    PlayField.prototype.shiftToLeft = function () {\n        var height = this.pieces.length / 10;\n        for (var y = 0; y < height; y += 1) {\n            for (var x = 0; x < FieldConstants.Width - 1; x += 1) {\n                this.pieces[x + y * FieldConstants.Width] = this.pieces[x + 1 + y * FieldConstants.Width];\n            }\n            this.pieces[9 + y * FieldConstants.Width] = defines_1.Piece.Empty;\n        }\n    };\n    PlayField.prototype.shiftToRight = function () {\n        var height = this.pieces.length / 10;\n        for (var y = 0; y < height; y += 1) {\n            for (var x = FieldConstants.Width - 1; 1 <= x; x -= 1) {\n                this.pieces[x + y * FieldConstants.Width] = this.pieces[x - 1 + y * FieldConstants.Width];\n            }\n            this.pieces[y * FieldConstants.Width] = defines_1.Piece.Empty;\n        }\n    };\n    PlayField.prototype.shiftToUp = function () {\n        var blanks = Array.from({ length: 10 }).map(function () { return defines_1.Piece.Empty; });\n        this.pieces = blanks.concat(this.pieces).slice(0, this.length);\n    };\n    PlayField.prototype.shiftToBottom = function () {\n        var blanks = Array.from({ length: 10 }).map(function () { return defines_1.Piece.Empty; });\n        this.pieces = this.pieces.slice(10, this.length).concat(blanks);\n    };\n    PlayField.prototype.toArray = function () {\n        return this.pieces.concat();\n    };\n    Object.defineProperty(PlayField.prototype, \"numOfBlocks\", {\n        get: function () {\n            return this.pieces.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PlayField.prototype.copy = function () {\n        return new PlayField({ pieces: this.pieces.concat(), length: this.length });\n    };\n    PlayField.prototype.toShallowArray = function () {\n        return this.pieces;\n    };\n    PlayField.prototype.clearAll = function () {\n        this.pieces = this.pieces.map(function () { return defines_1.Piece.Empty; });\n    };\n    PlayField.prototype.equals = function (other) {\n        if (this.pieces.length !== other.pieces.length) {\n            return false;\n        }\n        for (var index = 0; index < this.pieces.length; index += 1) {\n            if (this.pieces[index] !== other.pieces[index]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    return PlayField;\n}());\nexports.PlayField = PlayField;\nfunction getBlockPositions(piece, rotation, x, y) {\n    return getBlocks(piece, rotation).map(function (position) {\n        position[0] += x;\n        position[1] += y;\n        return position;\n    });\n}\nexports.getBlockPositions = getBlockPositions;\nfunction getBlockXYs(piece, rotation, x, y) {\n    return getBlocks(piece, rotation).map(function (position) {\n        return { x: position[0] + x, y: position[1] + y };\n    });\n}\nexports.getBlockXYs = getBlockXYs;\nfunction getBlocks(piece, rotation) {\n    var blocks = getPieces(piece);\n    switch (rotation) {\n        case defines_1.Rotation.Spawn:\n            return blocks;\n        case defines_1.Rotation.Left:\n            return rotateLeft(blocks);\n        case defines_1.Rotation.Reverse:\n            return rotateReverse(blocks);\n        case defines_1.Rotation.Right:\n            return rotateRight(blocks);\n    }\n    throw new Error('Unsupported block');\n}\nexports.getBlocks = getBlocks;\nfunction getPieces(piece) {\n    switch (piece) {\n        case defines_1.Piece.I:\n            return [[0, 0], [-1, 0], [1, 0], [2, 0]];\n        case defines_1.Piece.T:\n            return [[0, 0], [-1, 0], [1, 0], [0, 1]];\n        case defines_1.Piece.O:\n            return [[0, 0], [1, 0], [0, 1], [1, 1]];\n        case defines_1.Piece.L:\n            return [[0, 0], [-1, 0], [1, 0], [1, 1]];\n        case defines_1.Piece.J:\n            return [[0, 0], [-1, 0], [1, 0], [-1, 1]];\n        case defines_1.Piece.S:\n            return [[0, 0], [-1, 0], [0, 1], [1, 1]];\n        case defines_1.Piece.Z:\n            return [[0, 0], [1, 0], [0, 1], [-1, 1]];\n    }\n    throw new Error('Unsupported rotation');\n}\nexports.getPieces = getPieces;\nfunction rotateRight(positions) {\n    return positions.map(function (current) { return [current[1], -current[0]]; });\n}\nfunction rotateLeft(positions) {\n    return positions.map(function (current) { return [-current[1], current[0]]; });\n}\nfunction rotateReverse(positions) {\n    return positions.map(function (current) { return [-current[0], -current[1]]; });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}