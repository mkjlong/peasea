{"ast":null,"code":"export default function checkPieces(queue, pattern) {\n  //Fix queue (remove unnessesary pieces, replace * with [TIJLOSZ].)\n  pattern = pattern.replaceAll(/\\*/g, \"[TIJLOSZ]\").replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\n\n  //Iterate through each bag of \n  for (let [_, set, count = 1] of Array.from(pattern.matchAll(/((?<=\\[)\\^?[TIJLOSZ]{0,7}(?=\\])|[TIJLOSZ])\\]?(?:([!0-7]))?/g))) {\n    set = set.startsWith(\"^\") ? \"TIJLOSZ\".split(\"\").filter(piece => !set.includes(piece)).join(\"\") : set;\n    count = count === \"!\" ? set.length : Number(count);\n    console.log(set, queue, count);\n    if (queue.length < count || set.length < count) return false;\n    for (let piece of queue.substring(0, count)) {\n      if (!set.includes(piece)) return false;\n      set = set.replace(piece, \"\");\n    }\n    queue = queue.substring(count, queue.length);\n  }\n  return !queue.length;\n}\n\n/*export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split(\"{\");\r\n    if (modifiers?.endsWith(\"}\"))\r\n        modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n\r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n}\r\n*/","map":{"version":3,"names":["checkPieces","queue","pattern","replaceAll","_","set","count","Array","from","matchAll","startsWith","split","filter","piece","includes","join","length","Number","console","log","substring","replace"],"sources":["C:/Stuff/Github/peasea/src/scripts/pieces.tsx"],"sourcesContent":["export default function checkPieces(queue: string, pattern: string): boolean {\r\n    //Fix queue (remove unnessesary pieces, replace * with [TIJLOSZ].)\r\n    pattern = pattern.replaceAll(/\\*/g, \"[TIJLOSZ]\").replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\r\n\r\n    \r\n    //Iterate through each bag of \r\n    for (let [_, set, count = 1] of Array.from(pattern.matchAll(/((?<=\\[)\\^?[TIJLOSZ]{0,7}(?=\\])|[TIJLOSZ])\\]?(?:([!0-7]))?/g))) {\r\n        set = set.startsWith(\"^\") ? \"TIJLOSZ\".split(\"\").filter((piece) => !set.includes(piece)).join(\"\") : set;\r\n        count = count === \"!\" ? set.length : Number(count);\r\n\r\n        console.log(set,queue,count);\r\n        \r\n        if(queue.length < count || set.length < count)return false;\r\n\r\n        for (let piece of queue.substring(0, count)) {\r\n            if (!set.includes(piece)) return false;\r\n            set = set.replace(piece, \"\");\r\n        }\r\n        queue = queue.substring(count, queue.length);\r\n    }\r\n\r\n    return !queue.length;\r\n}\r\n\r\n/*export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split(\"{\");\r\n    if (modifiers?.endsWith(\"}\"))\r\n        modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n\r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n}\r\n*/"],"mappings":"AAAA,eAAe,SAASA,WAAWA,CAACC,KAAa,EAAEC,OAAe,EAAW;EACzE;EACAA,OAAO,GAAGA,OAAO,CAACC,UAAU,CAAC,KAAK,EAAE,WAAW,CAAC,CAACA,UAAU,CAAC,sBAAsB,EAAE,EAAE,CAAC;;EAGvF;EACA,KAAK,IAAI,CAACC,CAAC,EAAEC,GAAG,EAAEC,KAAK,GAAG,CAAC,CAAC,IAAIC,KAAK,CAACC,IAAI,CAACN,OAAO,CAACO,QAAQ,CAAC,6DAA6D,CAAC,CAAC,EAAE;IACzHJ,GAAG,GAAGA,GAAG,CAACK,UAAU,CAAC,GAAG,CAAC,GAAG,SAAS,CAACC,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAAEC,KAAK,IAAK,CAACR,GAAG,CAACS,QAAQ,CAACD,KAAK,CAAC,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC,GAAGV,GAAG;IACtGC,KAAK,GAAGA,KAAK,KAAK,GAAG,GAAGD,GAAG,CAACW,MAAM,GAAGC,MAAM,CAACX,KAAK,CAAC;IAElDY,OAAO,CAACC,GAAG,CAACd,GAAG,EAACJ,KAAK,EAACK,KAAK,CAAC;IAE5B,IAAGL,KAAK,CAACe,MAAM,GAAGV,KAAK,IAAID,GAAG,CAACW,MAAM,GAAGV,KAAK,EAAC,OAAO,KAAK;IAE1D,KAAK,IAAIO,KAAK,IAAIZ,KAAK,CAACmB,SAAS,CAAC,CAAC,EAAEd,KAAK,CAAC,EAAE;MACzC,IAAI,CAACD,GAAG,CAACS,QAAQ,CAACD,KAAK,CAAC,EAAE,OAAO,KAAK;MACtCR,GAAG,GAAGA,GAAG,CAACgB,OAAO,CAACR,KAAK,EAAE,EAAE,CAAC;IAChC;IACAZ,KAAK,GAAGA,KAAK,CAACmB,SAAS,CAACd,KAAK,EAAEL,KAAK,CAACe,MAAM,CAAC;EAChD;EAEA,OAAO,CAACf,KAAK,CAACe,MAAM;AACxB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}