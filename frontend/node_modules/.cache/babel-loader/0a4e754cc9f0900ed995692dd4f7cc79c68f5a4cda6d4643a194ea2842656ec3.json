{"ast":null,"code":"class Method {\n  // For game review (e.g., {\"JLOS\": \"jeremy\"})\n\n  constructor(name, specificPC, setups) {\n    this.name = void 0;\n    this.specificPC = void 0;\n    this.setups = void 0;\n    this.totalCover = void 0;\n    this.prioCover = void 0;\n    this.cumCover = void 0;\n    this.discoveredBy = void 0;\n    this.discoveryLink = void 0;\n    this.timestamp = void 0;\n    this.tags = void 0;\n    this.difficulty = void 0;\n    this.isOutdated = void 0;\n    this.requiresFirstPiece = void 0;\n    this.accessPieces = void 0;\n    // e.g. ['I', 'J', 'L']\n    this.mainSetupsPerBag = void 0;\n    this.name = name;\n    this.specificPC = specificPC;\n    this.setups = setups;\n    this.totalCover = 0;\n    this.prioCover = 0;\n    this.cumCover = 0;\n    this.discoveredBy = \"\";\n    this.discoveryLink = \"\";\n    this.timestamp = new Date();\n    this.tags = [];\n    this.difficulty = \"intermediate\";\n    this.isOutdated = false;\n    this.requiresFirstPiece = false;\n    this.accessPieces = [];\n    this.mainSetupsPerBag = {};\n  }\n\n  // Existing methods\n  setName(name) {\n    this.name = name;\n  }\n  getName() {\n    return this.name;\n  }\n  setSpecificPC(specificPC) {\n    this.specificPC = specificPC;\n  }\n  getSpecificPC() {\n    return this.specificPC;\n  }\n  addSetup(setup) {\n    this.setups.push(setup);\n  }\n  getSetups() {\n    return this.setups;\n  }\n\n  // New methods\n  setTotalCover(cover) {\n    this.totalCover = cover;\n  }\n  getTotalCover() {\n    return this.totalCover;\n  }\n  setPrioCover(cover) {\n    this.prioCover = cover;\n  }\n  getPrioCover() {\n    return this.prioCover;\n  }\n  setCumulativeCover(cover) {\n    this.cumCover = cover;\n  }\n  getCumulativeCover() {\n    return this.cumCover;\n  }\n  setDiscoveryInfo(discoveredBy, link, timestamp) {\n    this.discoveredBy = discoveredBy;\n    this.discoveryLink = link;\n    this.timestamp = timestamp;\n  }\n  getDiscoveryInfo() {\n    return {\n      discoveredBy: this.discoveredBy,\n      discoveryLink: this.discoveryLink,\n      timestamp: this.timestamp\n    };\n  }\n  setDifficulty(difficulty) {\n    this.difficulty = difficulty;\n  }\n  getDifficulty() {\n    return this.difficulty;\n  }\n  setTags(tags) {\n    this.tags = tags;\n  }\n  getTags() {\n    return this.tags;\n  }\n  markOutdated() {\n    this.isOutdated = true;\n  }\n  isMarkedOutdated() {\n    return this.isOutdated;\n  }\n  setRequiresFirstPiece(flag) {\n    this.requiresFirstPiece = flag;\n  }\n  doesRequireFirstPiece() {\n    return this.requiresFirstPiece;\n  }\n  setAccessPieces(pieces) {\n    this.accessPieces = pieces;\n  }\n  getAccessPieces() {\n    return this.accessPieces;\n  }\n  setMainSetupForBag(bag, setupName) {\n    this.mainSetupsPerBag[bag] = setupName;\n  }\n  getMainSetupForBag(bag) {\n    return this.mainSetupsPerBag[bag];\n  }\n  getAllMainSetups() {\n    return this.mainSetupsPerBag;\n  }\n}\nexport default Method;","map":{"version":3,"names":["Method","constructor","name","specificPC","setups","totalCover","prioCover","cumCover","discoveredBy","discoveryLink","timestamp","tags","difficulty","isOutdated","requiresFirstPiece","accessPieces","mainSetupsPerBag","Date","setName","getName","setSpecificPC","getSpecificPC","addSetup","setup","push","getSetups","setTotalCover","cover","getTotalCover","setPrioCover","getPrioCover","setCumulativeCover","getCumulativeCover","setDiscoveryInfo","link","getDiscoveryInfo","setDifficulty","getDifficulty","setTags","getTags","markOutdated","isMarkedOutdated","setRequiresFirstPiece","flag","doesRequireFirstPiece","setAccessPieces","pieces","getAccessPieces","setMainSetupForBag","bag","setupName","getMainSetupForBag","getAllMainSetups"],"sources":["C:/Stuff/Github/peasea/frontend/src/scripts/Method.tsx"],"sourcesContent":["import Setup from \"./Setup\";\r\n\r\nclass Method {\r\n    private name: string;\r\n    private specificPC: string;\r\n    private setups: Setup[];\r\n\r\n    private totalCover: number;\r\n    private prioCover: number;\r\n    private cumCover: number;\r\n\r\n    private discoveredBy: string;\r\n    private discoveryLink: string;\r\n    private timestamp: Date;\r\n\r\n    private tags: string[];\r\n    private difficulty: \"easy\" | \"intermediate\" | \"advanced\";\r\n\r\n    private isOutdated: boolean;\r\n    private requiresFirstPiece: boolean;\r\n\r\n    private accessPieces: string[]; // e.g. ['I', 'J', 'L']\r\n    private mainSetupsPerBag: { [bag: string]: string }; // For game review (e.g., {\"JLOS\": \"jeremy\"})\r\n\r\n    constructor(name: string, specificPC: string, setups: Setup[]) {\r\n        this.name = name;\r\n        this.specificPC = specificPC;\r\n        this.setups = setups;\r\n\r\n        this.totalCover = 0;\r\n        this.prioCover = 0;\r\n        this.cumCover = 0;\r\n\r\n        this.discoveredBy = \"\";\r\n        this.discoveryLink = \"\";\r\n        this.timestamp = new Date();\r\n\r\n        this.tags = [];\r\n        this.difficulty = \"intermediate\";\r\n\r\n        this.isOutdated = false;\r\n        this.requiresFirstPiece = false;\r\n\r\n        this.accessPieces = [];\r\n        this.mainSetupsPerBag = {};\r\n    }\r\n\r\n    // Existing methods\r\n    setName(name: string) { this.name = name; }\r\n    getName() { return this.name; }\r\n\r\n    setSpecificPC(specificPC: string) { this.specificPC = specificPC; }\r\n    getSpecificPC() { return this.specificPC; }\r\n\r\n    addSetup(setup: Setup) { this.setups.push(setup); }\r\n    getSetups(): Setup[] { return this.setups; }\r\n\r\n    // New methods\r\n    setTotalCover(cover: number) { this.totalCover = cover; }\r\n    getTotalCover() { return this.totalCover; }\r\n\r\n    setPrioCover(cover: number) { this.prioCover = cover; }\r\n    getPrioCover() { return this.prioCover; }\r\n\r\n    setCumulativeCover(cover: number) { this.cumCover = cover; }\r\n    getCumulativeCover() { return this.cumCover; }\r\n\r\n    setDiscoveryInfo(discoveredBy: string, link: string, timestamp: Date) {\r\n        this.discoveredBy = discoveredBy;\r\n        this.discoveryLink = link;\r\n        this.timestamp = timestamp;\r\n    }\r\n\r\n    getDiscoveryInfo() {\r\n        return {\r\n            discoveredBy: this.discoveredBy,\r\n            discoveryLink: this.discoveryLink,\r\n            timestamp: this.timestamp,\r\n        };\r\n    }\r\n\r\n    setDifficulty(difficulty: \"easy\" | \"intermediate\" | \"advanced\") {\r\n        this.difficulty = difficulty;\r\n    }\r\n    getDifficulty() {\r\n        return this.difficulty;\r\n    }\r\n\r\n    setTags(tags: string[]) { this.tags = tags; }\r\n    getTags() { return this.tags; }\r\n\r\n    markOutdated() { this.isOutdated = true; }\r\n    isMarkedOutdated() { return this.isOutdated; }\r\n\r\n    setRequiresFirstPiece(flag: boolean) { this.requiresFirstPiece = flag; }\r\n    doesRequireFirstPiece() { return this.requiresFirstPiece; }\r\n\r\n    setAccessPieces(pieces: string[]) { this.accessPieces = pieces; }\r\n    getAccessPieces() { return this.accessPieces; }\r\n\r\n    setMainSetupForBag(bag: string, setupName: string) {\r\n        this.mainSetupsPerBag[bag] = setupName;\r\n    }\r\n    getMainSetupForBag(bag: string) {\r\n        return this.mainSetupsPerBag[bag];\r\n    }\r\n\r\n    getAllMainSetups() {\r\n        return this.mainSetupsPerBag;\r\n    }\r\n}\r\n\r\nexport default Method;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}