{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\pages\\\\MethodPage\\\\MethodPage.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport classes from \"./MethodPage.module.css\";\nimport { useEffect } from \"react\";\nimport { useSidebar } from \"../../contexts/SidebarContext\";\nimport { useNavbar } from \"../../contexts/NavContext\";\nimport MethodChooser from \"../../components/MethodChooser/MethodChooser\";\nimport SetupPreview from \"../../components/SetupPreview/SetupPreview\";\nimport Setup from \"../../scripts/Setup\";\nimport { PCGroup } from \"../../scripts/PCGroup\";\nimport { normalizedSort } from \"../../scripts/pieces\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst testSetups = Setup.testSetups;\nconst MethodPage = _ref => {\n  _s();\n  let {\n    pc\n  } = _ref;\n  const {\n    setSidebar\n  } = useSidebar();\n  const {\n    setNavbar\n  } = useNavbar();\n  const {\n    queue\n  } = useParams();\n  const normalizedQueue = normalizedSort(queue !== null && queue !== void 0 ? queue : \"\");\n  const pcGroup = PCGroup.from(queue !== null && queue !== void 0 ? queue : \"\");\n  useEffect(() => {\n    setSidebar(\"\".concat(queue, \" Methods\"), /*#__PURE__*/_jsxDEV(MethodChooser, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 40\n    }, this));\n    setNavbar(/*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: classes.link,\n        href: \"../\".concat(pc.getIter()),\n        children: \"\".concat(pc)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \" \\u2022 \", queue]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false));\n  }, []);\n\n  // Filter setups that match this PCGroup queue\n  const matchingSetups = testSetups.filter(setup => normalizedSort(setup.getPCGroup().queue) === normalizedQueue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.methodPage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.setupList,\n      children: matchingSetups.map((setup, idx) => /*#__PURE__*/_jsxDEV(SetupPreview, {\n        setup: setup\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(MethodPage, \"Jfs+k5XGlUvZVLnXQPdj8GOP9cg=\", false, function () {\n  return [useSidebar, useNavbar, useParams];\n});\n_c = MethodPage;\nvar _c;\n$RefreshReg$(_c, \"MethodPage\");","map":{"version":3,"names":["useParams","classes","useEffect","useSidebar","useNavbar","MethodChooser","SetupPreview","Setup","PCGroup","normalizedSort","jsxDEV","_jsxDEV","Fragment","_Fragment","testSetups","MethodPage","_ref","_s","pc","setSidebar","setNavbar","queue","normalizedQueue","pcGroup","from","concat","fileName","_jsxFileName","lineNumber","columnNumber","children","className","link","href","getIter","matchingSetups","filter","setup","getPCGroup","methodPage","setupList","map","idx","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/pages/MethodPage/MethodPage.tsx"],"sourcesContent":["import { useParams } from \"react-router-dom\";\r\nimport classes from \"./MethodPage.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useSidebar } from \"../../contexts/SidebarContext\";\r\nimport { useNavbar } from \"../../contexts/NavContext\";\r\nimport SetChooser from \"../../components/SetChooser/SetChooser\";\r\nimport MethodChooser from \"../../components/MethodChooser/MethodChooser\";\r\nimport SetupPreview from \"../../components/SetupPreview/SetupPreview\";\r\nimport { PC } from \"../../scripts/PC\";\r\nimport Setup from \"../../scripts/Setup\";\r\nimport { PCGroup } from \"../../scripts/PCGroup\";\r\nimport { normalizedSort } from \"../../scripts/pieces\";\r\n\r\ninterface MethodPage {\r\n    pc: PC;\r\n}\r\n\r\nconst testSetups = Setup.testSetups;\r\nconst MethodPage = ({ pc }: MethodPage) => {\r\n    const { setSidebar } = useSidebar();\r\n    const { setNavbar } = useNavbar();\r\n    const { queue } = useParams();\r\n\r\n    const normalizedQueue = normalizedSort(queue ?? \"\");\r\n    const pcGroup = PCGroup.from(queue ?? \"\");\r\n\r\n    useEffect(() => {\r\n        setSidebar(`${queue} Methods`, <MethodChooser />);\r\n        setNavbar(\r\n            <>\r\n                <a className={classes.link} href={`../${pc.getIter()}`}>{`${pc}`}</a> â€¢ {queue}\r\n            </>,\r\n            <></>\r\n        );\r\n    }, []);\r\n\r\n    // Filter setups that match this PCGroup queue\r\n    const matchingSetups = testSetups.filter(setup =>\r\n        normalizedSort(setup.getPCGroup().queue) === normalizedQueue\r\n    );\r\n\r\n    return (\r\n        <div className={classes.methodPage}>\r\n            <div className={classes.setupList}>\r\n                {matchingSetups.map((setup, idx) => (\r\n                    <SetupPreview key={idx} setup={setup} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,SAAS,QAAQ,2BAA2B;AAErD,OAAOC,aAAa,MAAM,8CAA8C;AACxE,OAAOC,YAAY,MAAM,4CAA4C;AAErE,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,cAAc,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAMtD,MAAMC,UAAU,GAAGP,KAAK,CAACO,UAAU;AACnC,MAAMC,UAAU,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EAClC,MAAM;IAAEG;EAAW,CAAC,GAAGhB,UAAU,CAAC,CAAC;EACnC,MAAM;IAAEiB;EAAU,CAAC,GAAGhB,SAAS,CAAC,CAAC;EACjC,MAAM;IAAEiB;EAAM,CAAC,GAAGrB,SAAS,CAAC,CAAC;EAE7B,MAAMsB,eAAe,GAAGb,cAAc,CAACY,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC;EACnD,MAAME,OAAO,GAAGf,OAAO,CAACgB,IAAI,CAACH,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI,EAAE,CAAC;EAEzCnB,SAAS,CAAC,MAAM;IACZiB,UAAU,IAAAM,MAAA,CAAIJ,KAAK,4BAAYV,OAAA,CAACN,aAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;IACjDT,SAAS,cACLT,OAAA,CAAAE,SAAA;MAAAiB,QAAA,gBACInB,OAAA;QAAGoB,SAAS,EAAE9B,OAAO,CAAC+B,IAAK;QAACC,IAAI,QAAAR,MAAA,CAAQP,EAAE,CAACgB,OAAO,CAAC,CAAC,CAAG;QAAAJ,QAAA,KAAAL,MAAA,CAAKP,EAAE;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,YAAG,EAACR,KAAK;IAAA,eAChF,CAAC,eACHV,OAAA,CAAAE,SAAA,mBAAI,CACR,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMsB,cAAc,GAAGrB,UAAU,CAACsB,MAAM,CAACC,KAAK,IAC1C5B,cAAc,CAAC4B,KAAK,CAACC,UAAU,CAAC,CAAC,CAACjB,KAAK,CAAC,KAAKC,eACjD,CAAC;EAED,oBACIX,OAAA;IAAKoB,SAAS,EAAE9B,OAAO,CAACsC,UAAW;IAAAT,QAAA,eAC/BnB,OAAA;MAAKoB,SAAS,EAAE9B,OAAO,CAACuC,SAAU;MAAAV,QAAA,EAC7BK,cAAc,CAACM,GAAG,CAAC,CAACJ,KAAK,EAAEK,GAAG,kBAC3B/B,OAAA,CAACL,YAAY;QAAW+B,KAAK,EAAEA;MAAM,GAAlBK,GAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACZ,EAAA,CAhCIF,UAAU;EAAA,QACWZ,UAAU,EACXC,SAAS,EACbJ,SAAS;AAAA;AAAA2C,EAAA,GAHzB5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}