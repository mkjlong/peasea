{"ast":null,"code":"var _jsxFileName = \"C:\\\\Stuff\\\\Github\\\\peasea\\\\frontend\\\\src\\\\components\\\\SetChooser\\\\SetChooser.tsx\";\nimport classes from \"./SetChooser.module.css\";\nimport Set from \"../../scripts/Set\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sets = [new Set(\"Algebruh's 2nd\", [], \"algebruh\", \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\"), new Set(\"2nd 100% T\", [], \"mkjl\", \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\"), new Set(\"Theoretical 2nd\", [], \"xp3\", \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\"), new Set(\"Beginner 2nd\", [], \"10Penta\", \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\"), new Set(\"FOUR.LOL 2nd\", [], \"FOUR\", \"A 4-height perfect clear requires 10 minos. Therefore, after an opening 4-height perfect clear, you will have 4 minos left from the second bag since each bag contains 7 minos. It turns out that you can arrange these 4 minos to give you a high chance of repeating a perfect clear.\")];\nconst SetChooser = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.content,\n    children: sets.map((set, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.setCard,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: classes.setTitle,\n        children: set.getName()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.setDescription,\n        children: set.getDescription()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.setAuthor,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: set.getAuthor(),\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          children: set.getAuthor()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = SetChooser;\nexport default SetChooser;\nvar _c;\n$RefreshReg$(_c, \"SetChooser\");","map":{"version":3,"names":["classes","Set","jsxDEV","_jsxDEV","sets","SetChooser","className","content","children","map","set","index","setCard","setTitle","getName","fileName","_jsxFileName","lineNumber","columnNumber","setDescription","getDescription","setAuthor","src","getAuthor","alt","_c","$RefreshReg$"],"sources":["C:/Stuff/Github/peasea/frontend/src/components/SetChooser/SetChooser.tsx"],"sourcesContent":["import classes from \"./SetChooser.module.css\"\r\nimport Set from \"../../scripts/Set\";\r\n\r\nconst sets: Set[] = [\r\n    new Set(\"Algebruh's 2nd\", [], \"algebruh\", \"This set is organized to minimize difficulty while maintaining reliability and usefulness.\"),\r\n    new Set(\"2nd 100% T\", [], \"mkjl\", \"This set contains every 2nd PC that has a 100% chance of saving into T 3rd.\"),\r\n    new Set(\"Theoretical 2nd\", [], \"xp3\", \"We know now that theoretically, T>I>J/L>O>S/Z for 3rd PC. We don't know how, but what would 2nd look like if we did?\"),\r\n    new Set(\"Beginner 2nd\", [], \"10Penta\", \"This is a 2nd PC doc truly oriented towards beginners just starting out and aiming to achieve their first 5-10PCs.\"),\r\n    new Set(\"FOUR.LOL 2nd\", [], \"FOUR\", \"A 4-height perfect clear requires 10 minos. Therefore, after an opening 4-height perfect clear, you will have 4 minos left from the second bag since each bag contains 7 minos. It turns out that you can arrange these 4 minos to give you a high chance of repeating a perfect clear.\"),\r\n];\r\n\r\nconst SetChooser = () => {\r\n    return (\r\n        <div className={classes.content}>\r\n            {sets.map((set, index) => (\r\n                <div key={index} className={classes.setCard}>\r\n                    <h2 className={classes.setTitle}>{set.getName()}</h2>\r\n                    <p className={classes.setDescription}>{set.getDescription()}</p>\r\n                    <div className={classes.setAuthor}>\r\n                        <img src={set.getAuthor()} alt=\"\" />\r\n                        <a>{set.getAuthor()}</a>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SetChooser;\r\n"],"mappings":";AAAA,OAAOA,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,GAAG,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAW,GAAG,CAChB,IAAIH,GAAG,CAAC,gBAAgB,EAAE,EAAE,EAAE,UAAU,EAAE,4FAA4F,CAAC,EACvI,IAAIA,GAAG,CAAC,YAAY,EAAE,EAAE,EAAE,MAAM,EAAE,6EAA6E,CAAC,EAChH,IAAIA,GAAG,CAAC,iBAAiB,EAAE,EAAE,EAAE,KAAK,EAAE,sHAAsH,CAAC,EAC7J,IAAIA,GAAG,CAAC,cAAc,EAAE,EAAE,EAAE,SAAS,EAAE,oHAAoH,CAAC,EAC5J,IAAIA,GAAG,CAAC,cAAc,EAAE,EAAE,EAAE,MAAM,EAAE,yRAAyR,CAAC,CACjU;AAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;EACrB,oBACIF,OAAA;IAAKG,SAAS,EAAEN,OAAO,CAACO,OAAQ;IAAAC,QAAA,EAC3BJ,IAAI,CAACK,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACjBR,OAAA;MAAiBG,SAAS,EAAEN,OAAO,CAACY,OAAQ;MAAAJ,QAAA,gBACxCL,OAAA;QAAIG,SAAS,EAAEN,OAAO,CAACa,QAAS;QAAAL,QAAA,EAAEE,GAAG,CAACI,OAAO,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrDf,OAAA;QAAGG,SAAS,EAAEN,OAAO,CAACmB,cAAe;QAAAX,QAAA,EAAEE,GAAG,CAACU,cAAc,CAAC;MAAC;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChEf,OAAA;QAAKG,SAAS,EAAEN,OAAO,CAACqB,SAAU;QAAAb,QAAA,gBAC9BL,OAAA;UAAKmB,GAAG,EAAEZ,GAAG,CAACa,SAAS,CAAC,CAAE;UAACC,GAAG,EAAC;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpCf,OAAA;UAAAK,QAAA,EAAIE,GAAG,CAACa,SAAS,CAAC;QAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACNf,OAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,GAPAP,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACO,EAAA,GAhBIpB,UAAU;AAkBhB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}