{"ast":null,"code":"function checkPieces(queue, pieces) {\n  console.log(\"Queue: \".concat(queue));\n  console.log(\"Pieces: \".concat(pieces));\n\n  // Remove non-useful characters (mostly [])\n  pieces = pieces.replaceAll(\"*\", \"[TIJLOSZ]\");\n  pieces = pieces.replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\n  for (let [_, set, count = 1] of Array.from(pieces.matchAll(/((?<=\\[)[TIJLOSZ]{0,7}(?=\\])|[TIJLOSZ])\\]?(?:([!0-7]))?/g))) {\n    if (set.startsWith(\"^\")) set = \"TIJLOSZ\".split(\"\").filter(piece => !set.includes(piece)).join(\"\");\n    count = count === \"!\" ? set.length : Number(count);\n    console.log(set, count);\n    for (let i = 0; i < count; i++) {\n      console.log(set, count[i]);\n      if (!set.includes(queue[i])) return false;\n    }\n  }\n  return true;\n}\n\n/*// Main method to check if a queue belongs to a set\r\n  export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split('{');\r\n    if(modifiers?.endsWith('}'))modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n    \r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n  }\r\n  \r\n  \r\n  \r\n  console.log(pieces(\"IJLS\", \"[IJLS]!{S<3}\"));\r\n  */\nexport default checkPieces;","map":{"version":3,"names":["checkPieces","queue","pieces","console","log","concat","replaceAll","_","set","count","Array","from","matchAll","startsWith","split","filter","piece","includes","join","length","Number","i"],"sources":["C:/Stuff/Github/peasea/src/scripts/pieces.tsx"],"sourcesContent":["function checkPieces(queue: string, pieces: string): boolean {\r\n    console.log(`Queue: ${queue}`);\r\n    console.log(`Pieces: ${pieces}`);\r\n    \r\n    // Remove non-useful characters (mostly [])\r\n    pieces = pieces.replaceAll(\"*\", \"[TIJLOSZ]\");\r\n    pieces = pieces.replaceAll(/[^\\[\\]^!TIJLOSZ0-7]/g, \"\");\r\n\r\n    for (let [_, set, count = 1] of Array.from(pieces.matchAll(/((?<=\\[)[TIJLOSZ]{0,7}(?=\\])|[TIJLOSZ])\\]?(?:([!0-7]))?/g))) {\r\n        \r\n        if (set.startsWith(\"^\")) set = \"TIJLOSZ\".split(\"\").filter(piece => !set.includes(piece)).join(\"\");\r\n        count = count === \"!\" ? set.length : Number(count);\r\n\r\n        console.log(set,count);\r\n        for(let i=0;i<count;i++){\r\n            console.log(set, count[i]);\r\n            \r\n            if(!set.includes(queue[i])) return false;\r\n\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/*// Main method to check if a queue belongs to a set\r\n  export default function pieces(queue: string, set: string): boolean {\r\n    console.log(`Queue: ${queue}, Set: ${set}`);\r\n    var [pieces, modifiers] = set.split('{');\r\n    if(modifiers?.endsWith('}'))modifiers = modifiers.slice(0, modifiers.length - 1);\r\n    console.log(`Pieces: ${pieces}, Modifiers: ${modifiers}`);\r\n    \r\n    const queuePieces = pieces.trim();\r\n    return true;\r\n  }\r\n  \r\n  \r\n  \r\n  console.log(pieces(\"IJLS\", \"[IJLS]!{S<3}\"));\r\n  */\r\nexport default checkPieces;\r\n"],"mappings":"AAAA,SAASA,WAAWA,CAACC,KAAa,EAAEC,MAAc,EAAW;EACzDC,OAAO,CAACC,GAAG,WAAAC,MAAA,CAAWJ,KAAK,CAAE,CAAC;EAC9BE,OAAO,CAACC,GAAG,YAAAC,MAAA,CAAYH,MAAM,CAAE,CAAC;;EAEhC;EACAA,MAAM,GAAGA,MAAM,CAACI,UAAU,CAAC,GAAG,EAAE,WAAW,CAAC;EAC5CJ,MAAM,GAAGA,MAAM,CAACI,UAAU,CAAC,sBAAsB,EAAE,EAAE,CAAC;EAEtD,KAAK,IAAI,CAACC,CAAC,EAAEC,GAAG,EAAEC,KAAK,GAAG,CAAC,CAAC,IAAIC,KAAK,CAACC,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,0DAA0D,CAAC,CAAC,EAAE;IAErH,IAAIJ,GAAG,CAACK,UAAU,CAAC,GAAG,CAAC,EAAEL,GAAG,GAAG,SAAS,CAACM,KAAK,CAAC,EAAE,CAAC,CAACC,MAAM,CAACC,KAAK,IAAI,CAACR,GAAG,CAACS,QAAQ,CAACD,KAAK,CAAC,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC;IACjGT,KAAK,GAAGA,KAAK,KAAK,GAAG,GAAGD,GAAG,CAACW,MAAM,GAAGC,MAAM,CAACX,KAAK,CAAC;IAElDN,OAAO,CAACC,GAAG,CAACI,GAAG,EAACC,KAAK,CAAC;IACtB,KAAI,IAAIY,CAAC,GAAC,CAAC,EAACA,CAAC,GAACZ,KAAK,EAACY,CAAC,EAAE,EAAC;MACpBlB,OAAO,CAACC,GAAG,CAACI,GAAG,EAAEC,KAAK,CAACY,CAAC,CAAC,CAAC;MAE1B,IAAG,CAACb,GAAG,CAACS,QAAQ,CAAChB,KAAK,CAACoB,CAAC,CAAC,CAAC,EAAE,OAAO,KAAK;IAG5C;EAEJ;EAEA,OAAO,IAAI;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAerB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}